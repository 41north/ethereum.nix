{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About the Project Ethereum.nix is a collection of Nix packages and NixOS modules designed to make it easier to operate Ethereum related services and infrastructure. Background In the beginning Ethereum.nix was a playground for Aldo Borrero to experiment with nix'ifying Ethereum related processes. Since then, it has a grown into an ever-increasing number of packages and modules targeted towards streamlining day-to-day operations across a variety of different projects.","title":"About the Project"},{"location":"#about-the-project","text":"Ethereum.nix is a collection of Nix packages and NixOS modules designed to make it easier to operate Ethereum related services and infrastructure.","title":"About the Project"},{"location":"#background","text":"In the beginning Ethereum.nix was a playground for Aldo Borrero to experiment with nix'ifying Ethereum related processes. Since then, it has a grown into an ever-increasing number of packages and modules targeted towards streamlining day-to-day operations across a variety of different projects.","title":"Background"},{"location":"license/","text":"Copyright (c) 2022-2023 Ethereum.nix contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"development/contributing/","text":"Contribution Guidelines This file contains instructions that will help you make a contribution. Licensing The Ethereum.nix packages, modules and this user guide are licensed under the MIT license . Before you contribute Here you can take a look at the existing issues . Feel free to contribute, but make sure you have a GitHub account first :) . If you're new to open source, please read GitHub's guide on How to Contribute to Open Source . It's a quick read, and it's a great way to introduce yourself to how things work behind the scenes in open-source projects. Before sending a pull request, make sure that you've read all the guidelines. If you don't understand something, please state your question clearly in an issue . Creating an issue If you need to create an issue, make sure to clearly describe it, including: The steps to reproduce it if it's a bug The version of ethereum.nix used Making changes If you want to introduce changes to the project, please follow these steps: Fork the repository on GitHub Create a branch on your fork. Don't commit directly to main Add the necessary tests for your changes Push your changes to the branch in your repository fork Submit a pull request to the original repository Make sure you based your commits on logical and atomic units! Examples of git history Git history that we want to have: Git history that we are trying to avoid: Git history that we want to have 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 * e3ed88b (HEAD -> contribution-guide, upstream/main, origin/main, origin/HEAD, main) Merge pull request #470 from zimbatm/fix_lru_cache |\\ | * 1ab7d9f Use rayon for multithreading command |/ * e9c5bb4 Merge pull request #468 from zimbatm/multithread |\\ | * de2d6cf Add lint property for Formatter struct | * cd2ed17 Fix impl on Formatter get_command() function |/ * 028c344 Merge pull request #465 from rayon/0.15.0-release |\\ | * 7b619d6 0.15.0 release |/ * acdf7df Merge pull request #463 from zimbatm/support-multi-part-namespaces Git history that we are trying to avoid: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 * 4c8aca8 Merge pull request #120 from zimbatm/add-rayon |\\ | * fc2b449 use rayon for engine now | * 2304683 add rayon config | * 5285bd3 bump base image to F30 * | 4d0fbe2 Merge pull request #114 from rizary/create_method_create_release |\\ \\ | * | 36a9396 test changed | * | 22f681d method create release for github created * | | 2ef4ea1 Merge pull request #119 from rizary/config.rs |\\ \\ \\ | |/ / |/| | | * | 5f1b8f0 unused functions removed * | | a93c361 Merge pull request #117 from zimbatm/add-getreleases-to-abstract |\\ \\ \\ | |/ / |/| | | * | 0a97236 add get_releses for Cargo | * | 55e4c57 add get_releases/get_release into engine.rs |/ / * | badeddd Merge pull request #101 from zimbatm/extreme-cachin Additionally, it's always good to work on improving documentation and adding examples. Thank you for considering contributing to ethereum.nix .","title":"Contribution Guidelines"},{"location":"development/contributing/#contribution-guidelines","text":"This file contains instructions that will help you make a contribution.","title":"Contribution Guidelines"},{"location":"development/contributing/#licensing","text":"The Ethereum.nix packages, modules and this user guide are licensed under the MIT license .","title":"Licensing"},{"location":"development/contributing/#before-you-contribute","text":"Here you can take a look at the existing issues . Feel free to contribute, but make sure you have a GitHub account first :) . If you're new to open source, please read GitHub's guide on How to Contribute to Open Source . It's a quick read, and it's a great way to introduce yourself to how things work behind the scenes in open-source projects. Before sending a pull request, make sure that you've read all the guidelines. If you don't understand something, please state your question clearly in an issue .","title":"Before you contribute"},{"location":"development/contributing/#creating-an-issue","text":"If you need to create an issue, make sure to clearly describe it, including: The steps to reproduce it if it's a bug The version of ethereum.nix used","title":"Creating an issue"},{"location":"development/contributing/#making-changes","text":"If you want to introduce changes to the project, please follow these steps: Fork the repository on GitHub Create a branch on your fork. Don't commit directly to main Add the necessary tests for your changes Push your changes to the branch in your repository fork Submit a pull request to the original repository Make sure you based your commits on logical and atomic units!","title":"Making changes"},{"location":"development/contributing/#examples-of-git-history","text":"Git history that we want to have: Git history that we are trying to avoid: Git history that we want to have 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 * e3ed88b (HEAD -> contribution-guide, upstream/main, origin/main, origin/HEAD, main) Merge pull request #470 from zimbatm/fix_lru_cache |\\ | * 1ab7d9f Use rayon for multithreading command |/ * e9c5bb4 Merge pull request #468 from zimbatm/multithread |\\ | * de2d6cf Add lint property for Formatter struct | * cd2ed17 Fix impl on Formatter get_command() function |/ * 028c344 Merge pull request #465 from rayon/0.15.0-release |\\ | * 7b619d6 0.15.0 release |/ * acdf7df Merge pull request #463 from zimbatm/support-multi-part-namespaces Git history that we are trying to avoid: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 * 4c8aca8 Merge pull request #120 from zimbatm/add-rayon |\\ | * fc2b449 use rayon for engine now | * 2304683 add rayon config | * 5285bd3 bump base image to F30 * | 4d0fbe2 Merge pull request #114 from rizary/create_method_create_release |\\ \\ | * | 36a9396 test changed | * | 22f681d method create release for github created * | | 2ef4ea1 Merge pull request #119 from rizary/config.rs |\\ \\ \\ | |/ / |/| | | * | 5f1b8f0 unused functions removed * | | a93c361 Merge pull request #117 from zimbatm/add-getreleases-to-abstract |\\ \\ \\ | |/ / |/| | | * | 0a97236 add get_releses for Cargo | * | 55e4c57 add get_releases/get_release into engine.rs |/ / * | badeddd Merge pull request #101 from zimbatm/extreme-cachin Additionally, it's always good to work on improving documentation and adding examples. Thank you for considering contributing to ethereum.nix .","title":"Examples of git history"},{"location":"getting-started/backup-and-restore/","text":"Backup and restore The following service modules support backups: Geth Prysm Beacon Nethermind Backup and restore functionality is implemented with Restic . Storage providers At the time of writing Restic supports the following storage backends: Local SFTP REST Server Amazon S3 Minio Server Wasabi Alibaba Cloud Object Storage System OpenStack Swift Backblaze B3 Microsoft Azure Blob Storage Google Cloud Storage Other services vis RClone Configuring backups Backup options are set inside the backup section of supporting modules. backup.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... backup = { enable = true ; schedule = \"0/1:00:00\" ; restic = { repository = \"s3:http://dione:9000/geth-sepolia\" ; passwordFile = sops . secrets . restic_password . path ; environmentFile = sops . secrets . restic_env . path ; }; }; }; } By default, backups are scheduled daily. This can be modified through the schedule option which follows the same format as systemd.time . To access a Restic repository, a password (also called a key) must be specified. This can be done via restic.passwordFile . And since Restic can be configured with a wide variety of storage providers, an environment file can be provided to accommodate their configuration. When using an Amazon S3 backend for example the environment file might look like this: aws.env 1 2 3 AWS_DEFAULT_REGION=eu-west-1 AWS_ACCESS_KEY_ID=my_access_key AWS_SECRET_ACCESS_KEY=my_secret_key For a detailed list of options please see here . Systemd services When backups are enabled several new Systemd services and timers will be introduced to facilitate the backup process. For an instance of Geth named sepolia for example, the following services will be added: geth-sepolia-metadata.service which captures metadata such as chain height and persists it in the state directory. geth-sepolia-metadata.timer which triggers the metadata service every 10 seconds by default. This interval is configurable via metadata.interval . geth-sepolia-backup.service which is responsible for stopping geth-sepolia.service , backing up its state directory, and restarting it. geth-sepolia-backup.timer which triggers the backup service once daily by default. This schedule is configurable via backup.schedule . Restoring from backup Restore options are set inside the restore section of supporting modules and share many of the same config options as backups . restore.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... restore = { enable = true ; snapshot = \"latest\" ; restic = { repository = \"s3:http://dione:9000/geth-sepolia\" ; passwordFile = sops . secrets . restic_password . path ; environmentFile = sops . secrets . restic_env . path ; }; }; }; } The one key difference is the snapshot option which details which snapshot to restore from. This can be latest as seen in the example above, or a specific snapshot id as listed by running restic snapshots : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u276f restic snapshots -c | head ID Time Host Tags ------------------------------------------------------------------------------------------------------------------- 5e2006e9 2023-03-22 07:00:07 phoebe height:3139753 number:0x2fe8a9 stateRoot:0x1be15cbc48fbd1ddb2fee1332f5fd6eacca60a737b4e87874c82be32810b19a5 hash:0x04a53f7cc92888de4ea743419855abdfff4ba84454db211846d984609578b265 name:geth-sepolia bdf903fc 2023-03-22 08:00:18 phoebe height:3140008 number:0x2fe9a8 stateRoot:0xac1fd086f4e5afe152afd110f67ce86a5787895ca75c3fffa516229fc10ec9b2 hash:0x330594bc56d97b30c9794f33c692f32f3e29a6de1acb495cc4e66b0a437dc4c3 name:geth-sepolia e83e3f49 2023-03-22 09:00:17 phoebe height:3140256 number:0x2feaa0 stateRoot:0x0a82d296b70638063187208707681d8976769594e65cd823da7429e215cce2a7 hash:0x6b39cfca2375b0cfb11e59c9f159e7a19108aa25cfbf4a88de53a9c1e089e233 name:geth-sepolia Note: restoring from backup will only be attempted if the state directory for the service in question is empty. The presence of any files will cause the restoration attempt to be aborted. This means it is safe to leave the restore config in place as it only has an effect when initialising a fresh instance.","title":"Backup and restore"},{"location":"getting-started/backup-and-restore/#backup-and-restore","text":"The following service modules support backups: Geth Prysm Beacon Nethermind Backup and restore functionality is implemented with Restic .","title":"Backup and restore"},{"location":"getting-started/backup-and-restore/#storage-providers","text":"At the time of writing Restic supports the following storage backends: Local SFTP REST Server Amazon S3 Minio Server Wasabi Alibaba Cloud Object Storage System OpenStack Swift Backblaze B3 Microsoft Azure Blob Storage Google Cloud Storage Other services vis RClone","title":"Storage providers"},{"location":"getting-started/backup-and-restore/#configuring-backups","text":"Backup options are set inside the backup section of supporting modules. backup.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... backup = { enable = true ; schedule = \"0/1:00:00\" ; restic = { repository = \"s3:http://dione:9000/geth-sepolia\" ; passwordFile = sops . secrets . restic_password . path ; environmentFile = sops . secrets . restic_env . path ; }; }; }; } By default, backups are scheduled daily. This can be modified through the schedule option which follows the same format as systemd.time . To access a Restic repository, a password (also called a key) must be specified. This can be done via restic.passwordFile . And since Restic can be configured with a wide variety of storage providers, an environment file can be provided to accommodate their configuration. When using an Amazon S3 backend for example the environment file might look like this: aws.env 1 2 3 AWS_DEFAULT_REGION=eu-west-1 AWS_ACCESS_KEY_ID=my_access_key AWS_SECRET_ACCESS_KEY=my_secret_key For a detailed list of options please see here .","title":"Configuring backups"},{"location":"getting-started/backup-and-restore/#systemd-services","text":"When backups are enabled several new Systemd services and timers will be introduced to facilitate the backup process. For an instance of Geth named sepolia for example, the following services will be added: geth-sepolia-metadata.service which captures metadata such as chain height and persists it in the state directory. geth-sepolia-metadata.timer which triggers the metadata service every 10 seconds by default. This interval is configurable via metadata.interval . geth-sepolia-backup.service which is responsible for stopping geth-sepolia.service , backing up its state directory, and restarting it. geth-sepolia-backup.timer which triggers the backup service once daily by default. This schedule is configurable via backup.schedule .","title":"Systemd services"},{"location":"getting-started/backup-and-restore/#restoring-from-backup","text":"Restore options are set inside the restore section of supporting modules and share many of the same config options as backups . restore.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... restore = { enable = true ; snapshot = \"latest\" ; restic = { repository = \"s3:http://dione:9000/geth-sepolia\" ; passwordFile = sops . secrets . restic_password . path ; environmentFile = sops . secrets . restic_env . path ; }; }; }; } The one key difference is the snapshot option which details which snapshot to restore from. This can be latest as seen in the example above, or a specific snapshot id as listed by running restic snapshots : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u276f restic snapshots -c | head ID Time Host Tags ------------------------------------------------------------------------------------------------------------------- 5e2006e9 2023-03-22 07:00:07 phoebe height:3139753 number:0x2fe8a9 stateRoot:0x1be15cbc48fbd1ddb2fee1332f5fd6eacca60a737b4e87874c82be32810b19a5 hash:0x04a53f7cc92888de4ea743419855abdfff4ba84454db211846d984609578b265 name:geth-sepolia bdf903fc 2023-03-22 08:00:18 phoebe height:3140008 number:0x2fe9a8 stateRoot:0xac1fd086f4e5afe152afd110f67ce86a5787895ca75c3fffa516229fc10ec9b2 hash:0x330594bc56d97b30c9794f33c692f32f3e29a6de1acb495cc4e66b0a437dc4c3 name:geth-sepolia e83e3f49 2023-03-22 09:00:17 phoebe height:3140256 number:0x2feaa0 stateRoot:0x0a82d296b70638063187208707681d8976769594e65cd823da7429e215cce2a7 hash:0x6b39cfca2375b0cfb11e59c9f159e7a19108aa25cfbf4a88de53a9c1e089e233 name:geth-sepolia Note: restoring from backup will only be attempted if the state directory for the service in question is empty. The presence of any files will cause the restoration attempt to be aborted. This means it is safe to leave the restore config in place as it only has an effect when initialising a fresh instance.","title":"Restoring from backup"},{"location":"getting-started/installation/","text":"Installation Below you'll find several examples of how to use ethereum.nix . Choose appropriately depending on if you're using Nix Flakes or not. With flakes without using overlays (recommended) flake.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 { inputs = { nixpkgs . url = \"github:nixos/nixpkgs/22.11\" ; ethereum-nix = { url = \"github:nix-community/ethereum.nix\" ; inputs . nixpkgs . follows = \"nixpkgs\" ; }; }; outputs = inputs @ { self , ethereum-nix , nixpkgs , ... }: let system = \"x86_64-linux\" ; in { nixosConfigurations . my-system = nixpkgs . lib . nixosSystem { inherit system ; pkgs = nixpkgs . legacyPackages . $ { system }; modules = [ # optional: add nixos modules via the default nixosModule ethereum-nix . nixosModules . $ { system } . default ({ pkgs , system , ... }: { environment . systemPackages = ( with ethereum-nix . packages . $ { system }; [ teku lighthouse # ... ]); }) ]; }; }; } With flakes using overlays flake.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 { inputs = { nixpkgs . url = \"github:nixos/nixpkgs/22.11\" ; ethereum-nix = { url = \"github:nix-community/ethereum.nix\" ; inputs . nixpkgs . follows = \"nixpkgs\" ; }; }; outputs = inputs @ { self , ethereum-nix , nixpkgs , ... }: let system = \"x86_64-linux\" ; pkgs = import inputs . nixpkgs { inherit system ; overlays = [ # add packages via the default overlay ethereum-nix . overlays . default ]; }; in { nixosConfigurations . my-system = nixpkgs . lib . nixosSystem { inherit system pkgs ; modules = [ # optional: add nixos modules via the default nixosModule ethereum-nix . nixosModules . $ { system } . default ]; }; }; } Without flakes default.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { ethereum-nix ? import ( fetchTarball \"https://github.com/nix-community/ethereum.nix/archive/main.tar.gz\" ), system ? \"x86_64-linux\" , pkgs ? import <nixpkgs> # (1) { inherit system ; overlays = [ # add packages via the default overlay ethereum-nix . overlays . default ]; }, }: { my-machine = pkgs . lib . nixosSystem { inherit system pkgs ; modules = [ # optional: add nixos modules via the default nixosModule ethereum-nix . nixosModules . $ { system } . default ]; }; } 1. You must ensure that your `NIX_PATH` has `nixpkgs` pointing to a version that contains nixos modules e.g. `nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-22.11.tar.gz`","title":"Installation"},{"location":"getting-started/installation/#installation","text":"Below you'll find several examples of how to use ethereum.nix . Choose appropriately depending on if you're using Nix Flakes or not. With flakes without using overlays (recommended) flake.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 { inputs = { nixpkgs . url = \"github:nixos/nixpkgs/22.11\" ; ethereum-nix = { url = \"github:nix-community/ethereum.nix\" ; inputs . nixpkgs . follows = \"nixpkgs\" ; }; }; outputs = inputs @ { self , ethereum-nix , nixpkgs , ... }: let system = \"x86_64-linux\" ; in { nixosConfigurations . my-system = nixpkgs . lib . nixosSystem { inherit system ; pkgs = nixpkgs . legacyPackages . $ { system }; modules = [ # optional: add nixos modules via the default nixosModule ethereum-nix . nixosModules . $ { system } . default ({ pkgs , system , ... }: { environment . systemPackages = ( with ethereum-nix . packages . $ { system }; [ teku lighthouse # ... ]); }) ]; }; }; } With flakes using overlays flake.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 { inputs = { nixpkgs . url = \"github:nixos/nixpkgs/22.11\" ; ethereum-nix = { url = \"github:nix-community/ethereum.nix\" ; inputs . nixpkgs . follows = \"nixpkgs\" ; }; }; outputs = inputs @ { self , ethereum-nix , nixpkgs , ... }: let system = \"x86_64-linux\" ; pkgs = import inputs . nixpkgs { inherit system ; overlays = [ # add packages via the default overlay ethereum-nix . overlays . default ]; }; in { nixosConfigurations . my-system = nixpkgs . lib . nixosSystem { inherit system pkgs ; modules = [ # optional: add nixos modules via the default nixosModule ethereum-nix . nixosModules . $ { system } . default ]; }; }; } Without flakes default.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { ethereum-nix ? import ( fetchTarball \"https://github.com/nix-community/ethereum.nix/archive/main.tar.gz\" ), system ? \"x86_64-linux\" , pkgs ? import <nixpkgs> # (1) { inherit system ; overlays = [ # add packages via the default overlay ethereum-nix . overlays . default ]; }, }: { my-machine = pkgs . lib . nixosSystem { inherit system pkgs ; modules = [ # optional: add nixos modules via the default nixosModule ethereum-nix . nixosModules . $ { system } . default ]; }; } 1. You must ensure that your `NIX_PATH` has `nixpkgs` pointing to a version that contains nixos modules e.g. `nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-22.11.tar.gz`","title":"Installation"},{"location":"getting-started/restore-from-backup/","text":"Restoring from a backup The following service modules support restoring from backups: Geth Prysm Beacon Nethermind For an overview of how to configure backups please see here Basic configuration Restore options are set inside the restore section of supporting modules. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... restore = { enable = true ; snapshot = \"3090378\" ; borg = { repo = \"ssh://borg@backup.server/data/borgbackup/ethereum/geth-sepolia\" ; keyPath = \"/root/ed25519\" ; unencryptedRepoAccess = true ; }; }; }; } Borg Backup Host key checking Borg Backup uses ssh when connecting to a remote repository and as such requires an ssh private key. This key path can be provided via the keyPath option. When connecting to a backup host for the first time a restoration may fail if the provided host key has not been added to the remote machine's known host list. For testing and development purposes this check can be disabled via the strictHostKeyChecking option. For production setups it is recommended to update the remote server's known host list first before any backups are scheduled. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... restore = { enable = true ; snapshot = \"3090378\" ; borg = { repo = \"ssh://borg@dione/data/borgbackup/ethereum/geth-sepolia\" ; keyPath = \"/root/ed25519\" ; strictHostKeyChecking = false ; }; }; }; } Repository encryption There are several encryption schemes available for securing backup repositories. Note: The encryption mode can only be configured when creating a new repository - you can neither configure it on a per-archive basis nor change the encryption mode of an existing repository. For an overview of the encryption schemes available please refer to the borg backup official docs . Suitable corresponding NixOS options for configuring encryption are available .","title":"Restoring from a backup"},{"location":"getting-started/restore-from-backup/#restoring-from-a-backup","text":"The following service modules support restoring from backups: Geth Prysm Beacon Nethermind For an overview of how to configure backups please see here","title":"Restoring from a backup"},{"location":"getting-started/restore-from-backup/#basic-configuration","text":"Restore options are set inside the restore section of supporting modules. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... restore = { enable = true ; snapshot = \"3090378\" ; borg = { repo = \"ssh://borg@backup.server/data/borgbackup/ethereum/geth-sepolia\" ; keyPath = \"/root/ed25519\" ; unencryptedRepoAccess = true ; }; }; }; }","title":"Basic configuration"},{"location":"getting-started/restore-from-backup/#borg-backup","text":"","title":"Borg Backup"},{"location":"getting-started/restore-from-backup/#host-key-checking","text":"Borg Backup uses ssh when connecting to a remote repository and as such requires an ssh private key. This key path can be provided via the keyPath option. When connecting to a backup host for the first time a restoration may fail if the provided host key has not been added to the remote machine's known host list. For testing and development purposes this check can be disabled via the strictHostKeyChecking option. For production setups it is recommended to update the remote server's known host list first before any backups are scheduled. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 { pkgs , ... }: { services . ethereum . geth . sepolia = { ... restore = { enable = true ; snapshot = \"3090378\" ; borg = { repo = \"ssh://borg@dione/data/borgbackup/ethereum/geth-sepolia\" ; keyPath = \"/root/ed25519\" ; strictHostKeyChecking = false ; }; }; }; }","title":"Host key checking"},{"location":"getting-started/restore-from-backup/#repository-encryption","text":"There are several encryption schemes available for securing backup repositories. Note: The encryption mode can only be configured when creating a new repository - you can neither configure it on a per-archive basis nor change the encryption mode of an existing repository. For an overview of the encryption schemes available please refer to the borg backup official docs . Suitable corresponding NixOS options for configuring encryption are available .","title":"Repository encryption"},{"location":"getting-started/running-geth/","text":"Running Geth One or more Geth services can be configured with the services.ethereum.geth prefix. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { pkgs , ... }: { services . ethereum . geth . sepolia = { enable = true ; package = pkgs . geth ; openFirewall = true ; args = { syncmode = \"full\" ; network = \"sepolia\" ; http = { enable = true ; addr = \"0.0.0.0\" ; vhosts = [ \"localhost\" \"phoebe\" ]; api = [ \"net\" \"web3\" \"eth\" ]; }; authrpc . jwtsecret = sops . secrets . geth_jwt_secret . path ; }; extraArgs = [ \"--bootnodes\" \"enode://8ae4559db1b1e160be8cc46018d7db123ed6d03fbbfe481da5ec05f71f0aa4d5f4b02ad059127096aa994568706a0d02933984083b87c5e1e3de2b7692444d37@35.161.233.158:46855,enode://d0b3b290422f35ec3e68356f3a4cdf9c661f71a868110670e31441a5021d7abd0440ae8dfb9360aafdd0198f177863361e3a7a7eb5e1a3e26575bf1ac3ef4ab3@162.19.136.65:48264,enode://d64624bda3cdb65d542c90757a4a661cfe9dddf8328bdb1ea97a8d70fad287c360f0101c492d8fd6ab30d79160a3bf148cacfd68f5d2e47eab0b709516419304@51.195.63.10:30040,enode://c7df835939e027325c6bba926220fae5912a33c83d96b3eef8ef445c98083f3191788581c9a0e8f74cadb0b13229b847f5c1ebd315b22bcf11faf6468020eb48@54.163.51.157:30303,enode://da0609bad3afcab9b93175a41a2d621d07aa7ff6c134a00792d4541f0ce8d30d8f3c51bb37a47573508a0bf18865b04066af2a661edf1d3a3d8d133fc1031aa0@88.151.101.14:45192,enode://7a4534d392c59369eae6befa56ac670476d9edc16597cf53c92bbefa6e741b6b0b9e6822cab12afb09123e03ca1131026fbef145adec429fe2e50182dfb650a5@94.130.18.108:31312,enode://db6fa13b63a885440de581ee3fc8df9c6a590326b39fc5ccba7991707ee0cebac306211f7eca5270a350201a3132511f2338481edd81f3dc819c2a1c60419cf2@65.21.89.157:30303,enode://fcf03e9404cace34c60e4eed374ef9a779471014319b3346352fbc2f992a399af6517486e8e65a4ab55f4645fe55420bbea1cddc13a4af4df63b0f731915c6a6@13.125.238.49:46173,enode://8b973816278fdd56966709e4794c7ccce1f256eaa9165a6b013b991a9bdf3886a8f2d23af50ee723a5614a9fe9d197252b803b4455a87ab2468e128f7b06e0ca@172.104.107.145:30303,enode://5a1fb15f826a213d3ef4adb9be47ab58b2240ea05df0d760a244f04762b0847dcb08276b1284f726c22eea30fce0c601cf121b81bac0c151f1b3b4ad00d1482a@34.159.55.147:51262,enode://560928dd14819f88113586726e452b16bbc694ed4144ddadd6290053e7f3fc66bfad13add6889f7d8f37e0c21ccbb6948eb8899c8b30743f4b45a3081f1efed8@34.138.254.5:29888,enode://69a13b575b8c5278431409e9f7db36e7218667ae286bfb65a72dfec9201b2c5bbbe2797a1babbdf17a7bf7ca68fa3fbe1554612637eb1b2425fa975e1bccb54c@35.223.41.3:30303,enode://66158b31eecff939f220b291d2b448edbfe94f1d4c992d9395b5d476e55e54b5abd11d3ee44daf1e18ee27b910ef99cdf6f19775eb4820ebe4f77d7aa948e3b6@51.195.63.10:55198,enode://bf94acbd51170bf075cacb9f149b21ff46354d659ab434a0d40688f776e1e1556bc62be2dc2867ba513844268c0dc8240099a6b60efe1713fbc25da7fdeb6ff1@3.82.105.139:30303,enode://41329e5ceb51cdddbe6a475db00b682505768b71ff8ee37d2d3500ca1b78918f9fad57d6006dd9f79cd418437dbcf87ec2fd58d60710f925cb17da05a51197cf@65.21.34.60:30303\" ]; }; services . ethereum . geth . goerli = { enable = true ; ... }; } Note: It is recommended to use an attribute name that matches the network that Geth is configured for. Configuration Many of Geth's process arguments have been mapped to NixOS types and can be provided via the args section of the config. For a detailed list please refer to the NixOS Options reference. Additional arguments can be provided in a list directly to the Geth process via the extraArgs attribute as shown above. Systemd service For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of geth-${name}.service . Config Name Service name services.ethereum.geth.sepolia sepolia geth-sepolia.service services.ethereum.geth.goerli goerli geth-goerli.service services.ethereum.geth.mainnet mainnet geth-mainnet.service The service that is created can then be introspected and managed via the standard Systemd toolset. Action Command Status systemctl status geth-sepolia.service Stop systemctl stop geth-sepolia.service Start systemctl start geth-sepolia.service Restart systemctl restart geth-sepolia.service Logs journalctl -xefu geth-sepolia.service Using a Geth fork A different version of Geth can be configured via the package option. To configure Geth Sealer for example: server.nix 1 2 3 4 5 6 7 { pkgs , ... }: { services . ethereum . geth . sepolia = { enable = true ; package = pkgs . geth-sealer ; ... }; } Opening ports By default, openFirewall is set to false . If set to true , firewall rules are added which will expose the following ports: Protocol Config Default value TCP, UDP port 30303 TCP authrpc.port 8551 TCP http.port 8545 TCP ws.port 8546 TCP metrics.port 6060 Note: it is important when running multiple instances of Geth on the same machine that you ensure they are configured with different ports.","title":"Running Geth"},{"location":"getting-started/running-geth/#running-geth","text":"One or more Geth services can be configured with the services.ethereum.geth prefix. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { pkgs , ... }: { services . ethereum . geth . sepolia = { enable = true ; package = pkgs . geth ; openFirewall = true ; args = { syncmode = \"full\" ; network = \"sepolia\" ; http = { enable = true ; addr = \"0.0.0.0\" ; vhosts = [ \"localhost\" \"phoebe\" ]; api = [ \"net\" \"web3\" \"eth\" ]; }; authrpc . jwtsecret = sops . secrets . geth_jwt_secret . path ; }; extraArgs = [ \"--bootnodes\" \"enode://8ae4559db1b1e160be8cc46018d7db123ed6d03fbbfe481da5ec05f71f0aa4d5f4b02ad059127096aa994568706a0d02933984083b87c5e1e3de2b7692444d37@35.161.233.158:46855,enode://d0b3b290422f35ec3e68356f3a4cdf9c661f71a868110670e31441a5021d7abd0440ae8dfb9360aafdd0198f177863361e3a7a7eb5e1a3e26575bf1ac3ef4ab3@162.19.136.65:48264,enode://d64624bda3cdb65d542c90757a4a661cfe9dddf8328bdb1ea97a8d70fad287c360f0101c492d8fd6ab30d79160a3bf148cacfd68f5d2e47eab0b709516419304@51.195.63.10:30040,enode://c7df835939e027325c6bba926220fae5912a33c83d96b3eef8ef445c98083f3191788581c9a0e8f74cadb0b13229b847f5c1ebd315b22bcf11faf6468020eb48@54.163.51.157:30303,enode://da0609bad3afcab9b93175a41a2d621d07aa7ff6c134a00792d4541f0ce8d30d8f3c51bb37a47573508a0bf18865b04066af2a661edf1d3a3d8d133fc1031aa0@88.151.101.14:45192,enode://7a4534d392c59369eae6befa56ac670476d9edc16597cf53c92bbefa6e741b6b0b9e6822cab12afb09123e03ca1131026fbef145adec429fe2e50182dfb650a5@94.130.18.108:31312,enode://db6fa13b63a885440de581ee3fc8df9c6a590326b39fc5ccba7991707ee0cebac306211f7eca5270a350201a3132511f2338481edd81f3dc819c2a1c60419cf2@65.21.89.157:30303,enode://fcf03e9404cace34c60e4eed374ef9a779471014319b3346352fbc2f992a399af6517486e8e65a4ab55f4645fe55420bbea1cddc13a4af4df63b0f731915c6a6@13.125.238.49:46173,enode://8b973816278fdd56966709e4794c7ccce1f256eaa9165a6b013b991a9bdf3886a8f2d23af50ee723a5614a9fe9d197252b803b4455a87ab2468e128f7b06e0ca@172.104.107.145:30303,enode://5a1fb15f826a213d3ef4adb9be47ab58b2240ea05df0d760a244f04762b0847dcb08276b1284f726c22eea30fce0c601cf121b81bac0c151f1b3b4ad00d1482a@34.159.55.147:51262,enode://560928dd14819f88113586726e452b16bbc694ed4144ddadd6290053e7f3fc66bfad13add6889f7d8f37e0c21ccbb6948eb8899c8b30743f4b45a3081f1efed8@34.138.254.5:29888,enode://69a13b575b8c5278431409e9f7db36e7218667ae286bfb65a72dfec9201b2c5bbbe2797a1babbdf17a7bf7ca68fa3fbe1554612637eb1b2425fa975e1bccb54c@35.223.41.3:30303,enode://66158b31eecff939f220b291d2b448edbfe94f1d4c992d9395b5d476e55e54b5abd11d3ee44daf1e18ee27b910ef99cdf6f19775eb4820ebe4f77d7aa948e3b6@51.195.63.10:55198,enode://bf94acbd51170bf075cacb9f149b21ff46354d659ab434a0d40688f776e1e1556bc62be2dc2867ba513844268c0dc8240099a6b60efe1713fbc25da7fdeb6ff1@3.82.105.139:30303,enode://41329e5ceb51cdddbe6a475db00b682505768b71ff8ee37d2d3500ca1b78918f9fad57d6006dd9f79cd418437dbcf87ec2fd58d60710f925cb17da05a51197cf@65.21.34.60:30303\" ]; }; services . ethereum . geth . goerli = { enable = true ; ... }; } Note: It is recommended to use an attribute name that matches the network that Geth is configured for.","title":"Running Geth"},{"location":"getting-started/running-geth/#configuration","text":"Many of Geth's process arguments have been mapped to NixOS types and can be provided via the args section of the config. For a detailed list please refer to the NixOS Options reference. Additional arguments can be provided in a list directly to the Geth process via the extraArgs attribute as shown above.","title":"Configuration"},{"location":"getting-started/running-geth/#systemd-service","text":"For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of geth-${name}.service . Config Name Service name services.ethereum.geth.sepolia sepolia geth-sepolia.service services.ethereum.geth.goerli goerli geth-goerli.service services.ethereum.geth.mainnet mainnet geth-mainnet.service The service that is created can then be introspected and managed via the standard Systemd toolset. Action Command Status systemctl status geth-sepolia.service Stop systemctl stop geth-sepolia.service Start systemctl start geth-sepolia.service Restart systemctl restart geth-sepolia.service Logs journalctl -xefu geth-sepolia.service","title":"Systemd service"},{"location":"getting-started/running-geth/#using-a-geth-fork","text":"A different version of Geth can be configured via the package option. To configure Geth Sealer for example: server.nix 1 2 3 4 5 6 7 { pkgs , ... }: { services . ethereum . geth . sepolia = { enable = true ; package = pkgs . geth-sealer ; ... }; }","title":"Using a Geth fork"},{"location":"getting-started/running-geth/#opening-ports","text":"By default, openFirewall is set to false . If set to true , firewall rules are added which will expose the following ports: Protocol Config Default value TCP, UDP port 30303 TCP authrpc.port 8551 TCP http.port 8545 TCP ws.port 8546 TCP metrics.port 6060 Note: it is important when running multiple instances of Geth on the same machine that you ensure they are configured with different ports.","title":"Opening ports"},{"location":"getting-started/running-prysm-beacon/","text":"Running Prysm Beacon One or more Prysm Beacon services can be configured with the services.ethereum.prysm-beacon prefix. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { pkgs , ... }: { services . ethereum . prysm-beacon . sepolia = { enable = true ; openFirewall = true ; args = { network = \"sepolia\" ; jwt-secret = secrets . prysm_jwt_secret . path ; checkpoint-sync-url = \"https://sepolia.checkpoint-sync.ethdevops.io\" ; genesis-beacon-api-url = \"https://sepolia.checkpoint-sync.ethdevops.io\" ; }; extraArgs = [ \"--rpc-host=0.0.0.0\" \"--monitoring-host=0.0.0.0\" ]; }; services . ethereum . prysm-beacon . goerli = { enable = true ; ... }; } Note: It is recommended to use an attribute name that matches the network that Prysm Beacon is configured for. Configuration Many of Prysm Beacon's process arguments have been mapped to NixOS types and can be provided via the args section of the config. For a detailed list please refer to the NixOS Options reference. Additional arguments can be provided in a list directly to the Prysm Beacon process via the extraArgs attribute as shown above. Systemd service For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of prysm-beacon-${name}.service . Config Name Service name services.ethereum.prysm-beacon.sepolia sepolia prysm-beacon-sepolia.service services.ethereum.prysm-beacon.goerli goerli prysm-beacon-goerli.service services.ethereum.prysm-beacon.mainnet mainnet prysm-beacon-mainnet.service The service that is created can then be introspected and managed via the standard Systemd toolset. Action Command Status systemctl status prysm-beacon-sepolia.service Stop systemctl stop prysm-beacon-sepolia.service Start systemctl start prysm-beacon-sepolia.service Restart systemctl restart prysm-beacon-sepolia.service Logs journalctl -xefu prysm-beacon-sepolia.service Using a Prysm Beacon fork A different version of Prysm Beacon can be configured via the package option. To configure a custom fork for example: server.nix 1 2 3 4 5 6 7 { pkgs , ... }: { services . ethereum . prysm-beacon . sepolia = { enable = true ; package = pkgs . my-prysm-beacon ; ... }; } Opening ports By default, openFirewall is set to false . If set to true firewall rules are added which will expose the following ports: Protocol Config Default value UDP p2p-udp-port 12000 TCP p2p-tcp-port 13000 TCP grpc-gateway-port 3500 TCP monitoring-port 8080 TCP pprofport 8080 Note: it is important when running multiple instances of Prysm Beacon on the same machine that you ensure they are configured with different ports.","title":"Running Prysm Beacon"},{"location":"getting-started/running-prysm-beacon/#running-prysm-beacon","text":"One or more Prysm Beacon services can be configured with the services.ethereum.prysm-beacon prefix. server.nix 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { pkgs , ... }: { services . ethereum . prysm-beacon . sepolia = { enable = true ; openFirewall = true ; args = { network = \"sepolia\" ; jwt-secret = secrets . prysm_jwt_secret . path ; checkpoint-sync-url = \"https://sepolia.checkpoint-sync.ethdevops.io\" ; genesis-beacon-api-url = \"https://sepolia.checkpoint-sync.ethdevops.io\" ; }; extraArgs = [ \"--rpc-host=0.0.0.0\" \"--monitoring-host=0.0.0.0\" ]; }; services . ethereum . prysm-beacon . goerli = { enable = true ; ... }; } Note: It is recommended to use an attribute name that matches the network that Prysm Beacon is configured for.","title":"Running Prysm Beacon"},{"location":"getting-started/running-prysm-beacon/#configuration","text":"Many of Prysm Beacon's process arguments have been mapped to NixOS types and can be provided via the args section of the config. For a detailed list please refer to the NixOS Options reference. Additional arguments can be provided in a list directly to the Prysm Beacon process via the extraArgs attribute as shown above.","title":"Configuration"},{"location":"getting-started/running-prysm-beacon/#systemd-service","text":"For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of prysm-beacon-${name}.service . Config Name Service name services.ethereum.prysm-beacon.sepolia sepolia prysm-beacon-sepolia.service services.ethereum.prysm-beacon.goerli goerli prysm-beacon-goerli.service services.ethereum.prysm-beacon.mainnet mainnet prysm-beacon-mainnet.service The service that is created can then be introspected and managed via the standard Systemd toolset. Action Command Status systemctl status prysm-beacon-sepolia.service Stop systemctl stop prysm-beacon-sepolia.service Start systemctl start prysm-beacon-sepolia.service Restart systemctl restart prysm-beacon-sepolia.service Logs journalctl -xefu prysm-beacon-sepolia.service","title":"Systemd service"},{"location":"getting-started/running-prysm-beacon/#using-a-prysm-beacon-fork","text":"A different version of Prysm Beacon can be configured via the package option. To configure a custom fork for example: server.nix 1 2 3 4 5 6 7 { pkgs , ... }: { services . ethereum . prysm-beacon . sepolia = { enable = true ; package = pkgs . my-prysm-beacon ; ... }; }","title":"Using a Prysm Beacon fork"},{"location":"getting-started/running-prysm-beacon/#opening-ports","text":"By default, openFirewall is set to false . If set to true firewall rules are added which will expose the following ports: Protocol Config Default value UDP p2p-udp-port 12000 TCP p2p-tcp-port 13000 TCP grpc-gateway-port 3500 TCP monitoring-port 8080 TCP pprofport 8080 Note: it is important when running multiple instances of Prysm Beacon on the same machine that you ensure they are configured with different ports.","title":"Opening ports"},{"location":"reference/module-options/erigon/","text":"_module.args Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value services.ethereum.erigon Specification of one or more erigon instances. Type : attribute set of (submodule) Default 1 {} services.ethereum.erigon.<name>.args.authrpc.addr HTTP-RPC server listening interface for the Engine API. Type : string Default 1 \"127.0.0.1\" services.ethereum.erigon.<name>.args.authrpc.jwtsecret Path to the token that ensures safe connection between CL and EL. Type : null or string Default 1 null Example 1 \"/var/run/erigon/jwtsecret\" services.ethereum.erigon.<name>.args.authrpc.port HTTP-RPC server listening port for the Engine API Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8551 services.ethereum.erigon.<name>.args.authrpc.timeouts.idle Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default 1 \"2m0s\" Example 1 \"30s\" services.ethereum.erigon.<name>.args.authrpc.timeouts.read Maximum duration for reading the entire request, including the body. Type : string Default 1 \"30s\" Example 1 \"30s\" services.ethereum.erigon.<name>.args.authrpc.timeouts.write Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default 1 \"30m0s\" Example 1 \"30m0s\" services.ethereum.erigon.<name>.args.authrpc.vhosts Comma separated list of virtual hostnames from which to accept Engine API requests (server enforced). Accepts '*' wildcard.\" Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"erigon.example.org\"] services.ethereum.erigon.<name>.args.chain Name of the network to join. If null the network is mainnet. Type : one of \"mainnet\", \"rinkeby\", \"goerli\", \"sokol\", \"fermion\", \"mumbai\", \"bor-mainnet\", \"bor-devnet\", \"sepolia\", \"gnosis\", \"chiado\" Default 1 \"mainnet\" services.ethereum.erigon.<name>.args.externalcl Whether to enable enables external consensus. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.args.http.addr HTTP-RPC server listening interface. Type : string Default 1 \"127.0.0.1\" services.ethereum.erigon.<name>.args.http.api API's offered over the HTTP-RPC interface. Type : null or (list of string) Example 1 [\"net\",\"eth\"] services.ethereum.erigon.<name>.args.http.compression Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.args.http.corsdomain List of domains from which to accept cross origin requests. Type : null or (list of string) Default 1 null Example 1 [\"*\"] services.ethereum.erigon.<name>.args.http.enable Enable HTTP-RPC server Type : boolean Default 1 true services.ethereum.erigon.<name>.args.http.port HTTP-RPC server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545 services.ethereum.erigon.<name>.args.http.timeouts.idle Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default 1 \"2m0s\" Example 1 \"30s\" services.ethereum.erigon.<name>.args.http.timeouts.read Maximum duration for reading the entire request, including the body. Type : string Default 1 \"30s\" Example 1 \"30s\" services.ethereum.erigon.<name>.args.http.timeouts.write Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default 1 \"30m0s\" Example 1 \"30m0s\" services.ethereum.erigon.<name>.args.http.trace Whether to enable Trace HTTP requests with INFO level. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.args.http.vhosts Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"erigon.example.org\"] services.ethereum.erigon.<name>.args.metrics.addr Enable stand-alone metrics HTTP server listening interface. Type : string Default 1 \"127.0.0.1\" services.ethereum.erigon.<name>.args.metrics.enable Whether to enable Enable metrics collection and reporting.. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.args.metrics.port Metrics HTTP server listening port Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 6060 services.ethereum.erigon.<name>.args.port Network listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303 services.ethereum.erigon.<name>.args.private.api.addr Private api network address, for example: 127.0.0.1:9090, empty string means not to start the listener. Do not expose to public network. Serves remote database interface. Type : string Default 1 \"127.0.0.1:9090\" services.ethereum.erigon.<name>.args.private.api.ratelimit Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM. Type : signed integer Default 1 31872 services.ethereum.erigon.<name>.args.snapshots Default: use snapshots \"true\" for BSC, Mainnet and Goerli. use snapshots \"false\" in all other cases. Type : boolean Default 1 true services.ethereum.erigon.<name>.args.torrent.port Port to listen and serve BitTorrent protocol . Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 42069 services.ethereum.erigon.<name>.args.ws.compression Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.args.ws.enable Whether to enable Erigon WebSocket API. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.enable Whether to enable Erigon Ethereum Node.. Type : boolean Default 1 false Example 1 true services.ethereum.erigon.<name>.extraArgs Additional arguments to pass to Erigon. Type : list of string Default 1 [] services.ethereum.erigon.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default 1 false services.ethereum.erigon.<name>.package Package to use as Erigon node. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.erigon\"} services.ethereum.erigon.<name>.service.supplementaryGroups Additional groups for the systemd service e.g. sops-nix group for secret access Type : list of string Default 1 [] services.ethereum.erigon.<name>.subVolume Whether to enable Use a subvolume for the state directory if the underlying filesystem supports it e.g. btrfs. Type : boolean Default 1 false Example 1 true","title":"Erigon"},{"location":"reference/module-options/erigon/#_moduleargs","text":"Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value","title":"_module.args"},{"location":"reference/module-options/erigon/#servicesethereumerigon","text":"Specification of one or more erigon instances. Type : attribute set of (submodule) Default 1 {}","title":"services.ethereum.erigon"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpcaddr","text":"HTTP-RPC server listening interface for the Engine API. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.addr"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpcjwtsecret","text":"Path to the token that ensures safe connection between CL and EL. Type : null or string Default 1 null Example 1 \"/var/run/erigon/jwtsecret\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.jwtsecret"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpcport","text":"HTTP-RPC server listening port for the Engine API Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8551","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.port"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpctimeoutsidle","text":"Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default 1 \"2m0s\" Example 1 \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.idle"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpctimeoutsread","text":"Maximum duration for reading the entire request, including the body. Type : string Default 1 \"30s\" Example 1 \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.read"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpctimeoutswrite","text":"Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default 1 \"30m0s\" Example 1 \"30m0s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.write"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsauthrpcvhosts","text":"Comma separated list of virtual hostnames from which to accept Engine API requests (server enforced). Accepts '*' wildcard.\" Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"erigon.example.org\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.vhosts"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargschain","text":"Name of the network to join. If null the network is mainnet. Type : one of \"mainnet\", \"rinkeby\", \"goerli\", \"sokol\", \"fermion\", \"mumbai\", \"bor-mainnet\", \"bor-devnet\", \"sepolia\", \"gnosis\", \"chiado\" Default 1 \"mainnet\"","title":"services.ethereum.erigon.&lt;name&gt;.args.chain"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsexternalcl","text":"Whether to enable enables external consensus. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.externalcl"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpaddr","text":"HTTP-RPC server listening interface. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.addr"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpapi","text":"API's offered over the HTTP-RPC interface. Type : null or (list of string) Example 1 [\"net\",\"eth\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.http.api"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpcompression","text":"Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.http.compression"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpcorsdomain","text":"List of domains from which to accept cross origin requests. Type : null or (list of string) Default 1 null Example 1 [\"*\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.http.corsdomain"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpenable","text":"Enable HTTP-RPC server Type : boolean Default 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.http.enable"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpport","text":"HTTP-RPC server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545","title":"services.ethereum.erigon.&lt;name&gt;.args.http.port"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttptimeoutsidle","text":"Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default 1 \"2m0s\" Example 1 \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.idle"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttptimeoutsread","text":"Maximum duration for reading the entire request, including the body. Type : string Default 1 \"30s\" Example 1 \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.read"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttptimeoutswrite","text":"Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default 1 \"30m0s\" Example 1 \"30m0s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.write"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttptrace","text":"Whether to enable Trace HTTP requests with INFO level. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.http.trace"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargshttpvhosts","text":"Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"erigon.example.org\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.http.vhosts"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsmetricsaddr","text":"Enable stand-alone metrics HTTP server listening interface. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.erigon.&lt;name&gt;.args.metrics.addr"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsmetricsenable","text":"Whether to enable Enable metrics collection and reporting.. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.metrics.enable"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsmetricsport","text":"Metrics HTTP server listening port Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 6060","title":"services.ethereum.erigon.&lt;name&gt;.args.metrics.port"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsport","text":"Network listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303","title":"services.ethereum.erigon.&lt;name&gt;.args.port"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsprivateapiaddr","text":"Private api network address, for example: 127.0.0.1:9090, empty string means not to start the listener. Do not expose to public network. Serves remote database interface. Type : string Default 1 \"127.0.0.1:9090\"","title":"services.ethereum.erigon.&lt;name&gt;.args.private.api.addr"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargsprivateapiratelimit","text":"Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM. Type : signed integer Default 1 31872","title":"services.ethereum.erigon.&lt;name&gt;.args.private.api.ratelimit"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargssnapshots","text":"Default: use snapshots \"true\" for BSC, Mainnet and Goerli. use snapshots \"false\" in all other cases. Type : boolean Default 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.snapshots"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargstorrentport","text":"Port to listen and serve BitTorrent protocol . Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 42069","title":"services.ethereum.erigon.&lt;name&gt;.args.torrent.port"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargswscompression","text":"Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.ws.compression"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameargswsenable","text":"Whether to enable Erigon WebSocket API. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.args.ws.enable"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameenable","text":"Whether to enable Erigon Ethereum Node.. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.enable"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameextraargs","text":"Additional arguments to pass to Erigon. Type : list of string Default 1 []","title":"services.ethereum.erigon.&lt;name&gt;.extraArgs"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default 1 false","title":"services.ethereum.erigon.&lt;name&gt;.openFirewall"},{"location":"reference/module-options/erigon/#servicesethereumerigonnamepackage","text":"Package to use as Erigon node. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.erigon\"}","title":"services.ethereum.erigon.&lt;name&gt;.package"},{"location":"reference/module-options/erigon/#servicesethereumerigonnameservicesupplementarygroups","text":"Additional groups for the systemd service e.g. sops-nix group for secret access Type : list of string Default 1 []","title":"services.ethereum.erigon.&lt;name&gt;.service.supplementaryGroups"},{"location":"reference/module-options/erigon/#servicesethereumerigonnamesubvolume","text":"Whether to enable Use a subvolume for the state directory if the underlying filesystem supports it e.g. btrfs. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.erigon.&lt;name&gt;.subVolume"},{"location":"reference/module-options/geth-bootnode/","text":"_module.args Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value services.ethereum.geth-bootnode Specification of one or more geth bootnode instances. Type : attribute set of (submodule) Default 1 {} services.ethereum.geth-bootnode.<name>.args.addr Listen address Type : string Default 1 \":30301\" services.ethereum.geth-bootnode.<name>.args.genkey Generate a node key Type : null or string Default 1 null services.ethereum.geth-bootnode.<name>.args.nat Port mapping mechanism (any|none|upnp|pmp|pmp:IP|extip:IP) Type : string Default 1 \"none\" services.ethereum.geth-bootnode.<name>.args.netrestrict Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default 1 null services.ethereum.geth-bootnode.<name>.args.nodekey Private key filename Type : null or path Default 1 null services.ethereum.geth-bootnode.<name>.args.nodekeyhex Private key as hex (for testing) Type : null or string Default 1 null services.ethereum.geth-bootnode.<name>.args.v5 Run a V5 topic discovery bootnode Type : null or boolean Default 1 null services.ethereum.geth-bootnode.<name>.args.verbosity log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 1 3 services.ethereum.geth-bootnode.<name>.args.vmodule Log verbosity pattern Type : null or string Default 1 null services.ethereum.geth-bootnode.<name>.args.writeaddress Write out the node's public key and quit Type : null or boolean Default 1 null services.ethereum.geth-bootnode.<name>.enable Whether to enable Go Ethereum Boot Node. Type : boolean Default 1 false Example 1 true services.ethereum.geth-bootnode.<name>.extraArgs Additional arguments to pass to the Go Ethereum Bootnode. Type : list of string Default 1 [] services.ethereum.geth-bootnode.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default 1 false services.ethereum.geth-bootnode.<name>.package Package to use as Go Ethereum Boot node. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"}","title":"Geth bootnode"},{"location":"reference/module-options/geth-bootnode/#_moduleargs","text":"Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value","title":"_module.args"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnode","text":"Specification of one or more geth bootnode instances. Type : attribute set of (submodule) Default 1 {}","title":"services.ethereum.geth-bootnode"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsaddr","text":"Listen address Type : string Default 1 \":30301\"","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.addr"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsgenkey","text":"Generate a node key Type : null or string Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.genkey"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsnat","text":"Port mapping mechanism (any|none|upnp|pmp|pmp:IP|extip:IP) Type : string Default 1 \"none\"","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.nat"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsnetrestrict","text":"Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.netrestrict"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsnodekey","text":"Private key filename Type : null or path Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekey"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsnodekeyhex","text":"Private key as hex (for testing) Type : null or string Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekeyhex"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsv5","text":"Run a V5 topic discovery bootnode Type : null or boolean Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.v5"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsverbosity","text":"log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 1 3","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.verbosity"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargsvmodule","text":"Log verbosity pattern Type : null or string Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.vmodule"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameargswriteaddress","text":"Write out the node's public key and quit Type : null or boolean Default 1 null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.writeaddress"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameenable","text":"Whether to enable Go Ethereum Boot Node. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth-bootnode.&lt;name&gt;.enable"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameextraargs","text":"Additional arguments to pass to the Go Ethereum Bootnode. Type : list of string Default 1 []","title":"services.ethereum.geth-bootnode.&lt;name&gt;.extraArgs"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default 1 false","title":"services.ethereum.geth-bootnode.&lt;name&gt;.openFirewall"},{"location":"reference/module-options/geth-bootnode/#servicesethereumgeth-bootnodenamepackage","text":"Package to use as Go Ethereum Boot node. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"}","title":"services.ethereum.geth-bootnode.&lt;name&gt;.package"},{"location":"reference/module-options/geth/","text":"_module.args Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value services.ethereum.geth Specification of one or more geth instances. Type : attribute set of (submodule) Default 1 {} services.ethereum.geth.<name>.args.authrpc.addr Listen address of Go Ethereum Auth RPC API. Type : string Default 1 \"127.0.0.1\" services.ethereum.geth.<name>.args.authrpc.jwtsecret Path to a JWT secret for authenticated RPC endpoint. Type : null or string Default 1 null Example 1 \"/var/run/geth/jwtsecret\" services.ethereum.geth.<name>.args.authrpc.port Port number of Go Ethereum Auth RPC API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8551 services.ethereum.geth.<name>.args.authrpc.vhosts List of virtual hostnames from which to accept requests. Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"geth.example.org\"] services.ethereum.geth.<name>.args.bootnodes List of bootnodes to connect to Type : null or (list of string) Default 1 null services.ethereum.geth.<name>.args.gcmode Blockchain garbage collection mode. Type : one of \"full\", \"archive\" Default 1 \"full\" services.ethereum.geth.<name>.args.http.addr HTTP-RPC server listening interface Type : string Default 1 \"127.0.0.1\" services.ethereum.geth.<name>.args.http.api API's offered over the HTTP-RPC interface Type : null or (list of string) Default 1 null Example 1 [\"net\",\"eth\"] services.ethereum.geth.<name>.args.http.corsdomain List of domains from which to accept cross origin requests Type : null or (list of string) Default 1 null Example 1 [\"*\"] services.ethereum.geth.<name>.args.http.enable Whether to enable Go Ethereum HTTP API. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.args.http.port Port number of Go Ethereum HTTP API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545 services.ethereum.geth.<name>.args.http.rpcprefix HTTP path path prefix on which JSON-RPC is served. Use '/' to serve on all paths. Type : null or string Default 1 null Example 1 \"/\" services.ethereum.geth.<name>.args.http.vhosts Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"geth.example.org\"] services.ethereum.geth.<name>.args.maxpeers Maximum peers to connect to. Type : signed integer Default 1 50 services.ethereum.geth.<name>.args.metrics.addr Listen address of Go Ethereum metrics service. Type : string Default 1 \"127.0.0.1\" services.ethereum.geth.<name>.args.metrics.enable Whether to enable Go Ethereum prometheus metrics. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.args.metrics.port Port number of Go Ethereum metrics service. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 6060 services.ethereum.geth.<name>.args.netrestrict Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default 1 null services.ethereum.geth.<name>.args.network The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"kiln\", \"rinkeby\", \"ropsten\", \"sepolia\" Default 1 null services.ethereum.geth.<name>.args.networkid The network id used for peer to peer communication Type : signed integer Default 1 1 services.ethereum.geth.<name>.args.nodiscover Disable discovery Type : boolean Default 1 false services.ethereum.geth.<name>.args.port Port number Go Ethereum will be listening on, both TCP and UDP. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303 services.ethereum.geth.<name>.args.syncmode Blockchain sync mode. Type : one of \"snap\", \"fast\", \"full\", \"light\" Default 1 \"snap\" services.ethereum.geth.<name>.args.verbosity log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 1 3 services.ethereum.geth.<name>.args.ws.addr Listen address of Go Ethereum WebSocket API. Type : string Default 1 \"127.0.0.1\" services.ethereum.geth.<name>.args.ws.api APIs to enable over WebSocket Type : null or (list of string) Default 1 null Example 1 [\"net\",\"eth\"] services.ethereum.geth.<name>.args.ws.enable Whether to enable Go Ethereum WebSocket API. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.args.ws.port Port number of Go Ethereum WebSocket API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8546 services.ethereum.geth.<name>.backup.btrfs.enable Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.backup.btrfs.snapshotDirectory Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default 1 \"/snapshots\" services.ethereum.geth.<name>.backup.btrfs.snapshotRetention Number of days to retain snapshots Type : signed integer Default 1 7 Example 1 \"10\" services.ethereum.geth.<name>.backup.enable Whether to enable Enable backup. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.backup.metadata.interval Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 1 10 services.ethereum.geth.<name>.backup.restic.environmentFile file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null services.ethereum.geth.<name>.backup.restic.exclude Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"] services.ethereum.geth.<name>.backup.restic.extraOptions Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"] services.ethereum.geth.<name>.backup.restic.passwordFile Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\" services.ethereum.geth.<name>.backup.restic.rcloneConfig Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"} services.ethereum.geth.<name>.backup.restic.rcloneConfigFile Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null services.ethereum.geth.<name>.backup.restic.rcloneOptions Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"} services.ethereum.geth.<name>.backup.restic.repository repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\" services.ethereum.geth.<name>.backup.restic.repositoryFile Path to the file containing the repository location to backup to. Type : null or path Default 1 null services.ethereum.geth.<name>.backup.schedule Schedule for creating a backup. Format is the same as systemd.time Type : string Default 1 \"hourly\" Example 1 \"daily\" services.ethereum.geth.<name>.enable Whether to enable Go Ethereum Node. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.extraArgs Additional arguments to pass to Go Ethereum. Type : list of string Default 1 [] services.ethereum.geth.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default 1 false services.ethereum.geth.<name>.package Package to use as Go Ethereum node. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"} services.ethereum.geth.<name>.restore.enable Whether to enable Enable restore from snapshot. Type : boolean Default 1 false Example 1 true services.ethereum.geth.<name>.restore.restic.environmentFile file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null services.ethereum.geth.<name>.restore.restic.exclude Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"] services.ethereum.geth.<name>.restore.restic.extraOptions Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"] services.ethereum.geth.<name>.restore.restic.passwordFile Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\" services.ethereum.geth.<name>.restore.restic.rcloneConfig Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"} services.ethereum.geth.<name>.restore.restic.rcloneConfigFile Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null services.ethereum.geth.<name>.restore.restic.rcloneOptions Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"} services.ethereum.geth.<name>.restore.restic.repository repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\" services.ethereum.geth.<name>.restore.restic.repositoryFile Path to the file containing the repository location to backup to. Type : null or path Default 1 null services.ethereum.geth.<name>.restore.snapshot The id of the snapshot to restore from Type : string services.ethereum.geth.<name>.restore.timeout The max time to wait before timing out on startup. This value is used for TimeoutStartSec in the systemd service config. Type : signed integer Default 1 600 Example 1 \"900\"","title":"Geth"},{"location":"reference/module-options/geth/#_moduleargs","text":"Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value","title":"_module.args"},{"location":"reference/module-options/geth/#servicesethereumgeth","text":"Specification of one or more geth instances. Type : attribute set of (submodule) Default 1 {}","title":"services.ethereum.geth"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsauthrpcaddr","text":"Listen address of Go Ethereum Auth RPC API. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.addr"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsauthrpcjwtsecret","text":"Path to a JWT secret for authenticated RPC endpoint. Type : null or string Default 1 null Example 1 \"/var/run/geth/jwtsecret\"","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.jwtsecret"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsauthrpcport","text":"Port number of Go Ethereum Auth RPC API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8551","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.port"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsauthrpcvhosts","text":"List of virtual hostnames from which to accept requests. Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"geth.example.org\"]","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.vhosts"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsbootnodes","text":"List of bootnodes to connect to Type : null or (list of string) Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.args.bootnodes"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsgcmode","text":"Blockchain garbage collection mode. Type : one of \"full\", \"archive\" Default 1 \"full\"","title":"services.ethereum.geth.&lt;name&gt;.args.gcmode"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttpaddr","text":"HTTP-RPC server listening interface Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.http.addr"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttpapi","text":"API's offered over the HTTP-RPC interface Type : null or (list of string) Default 1 null Example 1 [\"net\",\"eth\"]","title":"services.ethereum.geth.&lt;name&gt;.args.http.api"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttpcorsdomain","text":"List of domains from which to accept cross origin requests Type : null or (list of string) Default 1 null Example 1 [\"*\"]","title":"services.ethereum.geth.&lt;name&gt;.args.http.corsdomain"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttpenable","text":"Whether to enable Go Ethereum HTTP API. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.args.http.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttpport","text":"Port number of Go Ethereum HTTP API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545","title":"services.ethereum.geth.&lt;name&gt;.args.http.port"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttprpcprefix","text":"HTTP path path prefix on which JSON-RPC is served. Use '/' to serve on all paths. Type : null or string Default 1 null Example 1 \"/\"","title":"services.ethereum.geth.&lt;name&gt;.args.http.rpcprefix"},{"location":"reference/module-options/geth/#servicesethereumgethnameargshttpvhosts","text":"Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default 1 [\"localhost\"] Example 1 [\"localhost\",\"geth.example.org\"]","title":"services.ethereum.geth.&lt;name&gt;.args.http.vhosts"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsmaxpeers","text":"Maximum peers to connect to. Type : signed integer Default 1 50","title":"services.ethereum.geth.&lt;name&gt;.args.maxpeers"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsmetricsaddr","text":"Listen address of Go Ethereum metrics service. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.metrics.addr"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsmetricsenable","text":"Whether to enable Go Ethereum prometheus metrics. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.args.metrics.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsmetricsport","text":"Port number of Go Ethereum metrics service. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 6060","title":"services.ethereum.geth.&lt;name&gt;.args.metrics.port"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsnetrestrict","text":"Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.args.netrestrict"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsnetwork","text":"The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"kiln\", \"rinkeby\", \"ropsten\", \"sepolia\" Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.args.network"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsnetworkid","text":"The network id used for peer to peer communication Type : signed integer Default 1 1","title":"services.ethereum.geth.&lt;name&gt;.args.networkid"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsnodiscover","text":"Disable discovery Type : boolean Default 1 false","title":"services.ethereum.geth.&lt;name&gt;.args.nodiscover"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsport","text":"Port number Go Ethereum will be listening on, both TCP and UDP. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303","title":"services.ethereum.geth.&lt;name&gt;.args.port"},{"location":"reference/module-options/geth/#servicesethereumgethnameargssyncmode","text":"Blockchain sync mode. Type : one of \"snap\", \"fast\", \"full\", \"light\" Default 1 \"snap\"","title":"services.ethereum.geth.&lt;name&gt;.args.syncmode"},{"location":"reference/module-options/geth/#servicesethereumgethnameargsverbosity","text":"log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 1 3","title":"services.ethereum.geth.&lt;name&gt;.args.verbosity"},{"location":"reference/module-options/geth/#servicesethereumgethnameargswsaddr","text":"Listen address of Go Ethereum WebSocket API. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.ws.addr"},{"location":"reference/module-options/geth/#servicesethereumgethnameargswsapi","text":"APIs to enable over WebSocket Type : null or (list of string) Default 1 null Example 1 [\"net\",\"eth\"]","title":"services.ethereum.geth.&lt;name&gt;.args.ws.api"},{"location":"reference/module-options/geth/#servicesethereumgethnameargswsenable","text":"Whether to enable Go Ethereum WebSocket API. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.args.ws.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnameargswsport","text":"Port number of Go Ethereum WebSocket API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8546","title":"services.ethereum.geth.&lt;name&gt;.args.ws.port"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupbtrfsenable","text":"Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.backup.btrfs.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupbtrfssnapshotdirectory","text":"Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default 1 \"/snapshots\"","title":"services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotDirectory"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupbtrfssnapshotretention","text":"Number of days to retain snapshots Type : signed integer Default 1 7 Example 1 \"10\"","title":"services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotRetention"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupenable","text":"Whether to enable Enable backup. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.backup.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupmetadatainterval","text":"Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 1 10","title":"services.ethereum.geth.&lt;name&gt;.backup.metadata.interval"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticenvironmentfile","text":"file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.environmentFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticexclude","text":"Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"]","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.exclude"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticextraoptions","text":"Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"]","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.extraOptions"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticpasswordfile","text":"Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\"","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.passwordFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticrcloneconfig","text":"Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"}","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneConfig"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticrcloneconfigfile","text":"Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneConfigFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticrcloneoptions","text":"Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"}","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneOptions"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticrepository","text":"repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\"","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.repository"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupresticrepositoryfile","text":"Path to the file containing the repository location to backup to. Type : null or path Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.backup.restic.repositoryFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamebackupschedule","text":"Schedule for creating a backup. Format is the same as systemd.time Type : string Default 1 \"hourly\" Example 1 \"daily\"","title":"services.ethereum.geth.&lt;name&gt;.backup.schedule"},{"location":"reference/module-options/geth/#servicesethereumgethnameenable","text":"Whether to enable Go Ethereum Node. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnameextraargs","text":"Additional arguments to pass to Go Ethereum. Type : list of string Default 1 []","title":"services.ethereum.geth.&lt;name&gt;.extraArgs"},{"location":"reference/module-options/geth/#servicesethereumgethnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default 1 false","title":"services.ethereum.geth.&lt;name&gt;.openFirewall"},{"location":"reference/module-options/geth/#servicesethereumgethnamepackage","text":"Package to use as Go Ethereum node. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"}","title":"services.ethereum.geth.&lt;name&gt;.package"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreenable","text":"Whether to enable Enable restore from snapshot. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.geth.&lt;name&gt;.restore.enable"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticenvironmentfile","text":"file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.environmentFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticexclude","text":"Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"]","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.exclude"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticextraoptions","text":"Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"]","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.extraOptions"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticpasswordfile","text":"Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\"","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.passwordFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticrcloneconfig","text":"Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"}","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneConfig"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticrcloneconfigfile","text":"Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneConfigFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticrcloneoptions","text":"Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"}","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneOptions"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticrepository","text":"repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\"","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.repository"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoreresticrepositoryfile","text":"Path to the file containing the repository location to backup to. Type : null or path Default 1 null","title":"services.ethereum.geth.&lt;name&gt;.restore.restic.repositoryFile"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoresnapshot","text":"The id of the snapshot to restore from Type : string","title":"services.ethereum.geth.&lt;name&gt;.restore.snapshot"},{"location":"reference/module-options/geth/#servicesethereumgethnamerestoretimeout","text":"The max time to wait before timing out on startup. This value is used for TimeoutStartSec in the systemd service config. Type : signed integer Default 1 600 Example 1 \"900\"","title":"services.ethereum.geth.&lt;name&gt;.restore.timeout"},{"location":"reference/module-options/nethermind/","text":"_module.args Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value services.ethereum.nethermind Specification of one or more Nethermind instances. Type : attribute set of (submodule) Default 1 {} services.ethereum.nethermind.<name>.args.baseDbPath Configures the path of the Nethermind's database folder. Type : null or path Default 1 null services.ethereum.nethermind.<name>.args.config Determines the configuration file of the network on which Nethermind will be running. Type : null or string Default 1 null Example 1 \"mainnet\" services.ethereum.nethermind.<name>.args.configsDirectory Changes the source directory of your configuration files. Type : null or path Default 1 null services.ethereum.nethermind.<name>.args.log Changes the logging level. Type : one of \"OFF\", \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" Default 1 \"INFO\" services.ethereum.nethermind.<name>.args.loggerConfigSource Changes the path of the NLog.config file. Type : null or string Default 1 null services.ethereum.nethermind.<name>.args.modules.HealthChecks.Enabled If 'true' then Health Check endpoints is enabled at /health. Type : boolean Default 1 true services.ethereum.nethermind.<name>.args.modules.JsonRpc.Enabled Defines whether the JSON RPC service is enabled on node startup. Type : boolean Default 1 true services.ethereum.nethermind.<name>.args.modules.JsonRpc.EngineHost Host for JSON RPC calls. Type : string Default 1 \"127.0.0.1\" services.ethereum.nethermind.<name>.args.modules.JsonRpc.EnginePort Port for Execution Engine calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8551 services.ethereum.nethermind.<name>.args.modules.JsonRpc.JwtSecretFile Path to file with hex encoded secret for jwt authentication. Type : null or string Default 1 null Example 1 \"/var/run/geth/jwtsecret\" services.ethereum.nethermind.<name>.args.modules.JsonRpc.Port Port number for JSON RPC calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545 services.ethereum.nethermind.<name>.args.modules.JsonRpc.WebSocketsPort Port number for JSON RPC web sockets calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545 services.ethereum.nethermind.<name>.args.modules.Metrics.Enabled If 'true',the node publishes various metrics to Prometheus Pushgateway at given interval. Type : boolean Default 1 true services.ethereum.nethermind.<name>.args.modules.Metrics.ExposePort If 'true' then Health Check endpoints is enabled at /health Type : null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 null services.ethereum.nethermind.<name>.args.modules.Network.DiscoveryPort UDP port number for incoming discovery connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303 services.ethereum.nethermind.<name>.args.modules.Network.P2PPort TPC/IP port number for incoming P2P connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303 services.ethereum.nethermind.<name>.backup.btrfs.enable Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default 1 false Example 1 true services.ethereum.nethermind.<name>.backup.btrfs.snapshotDirectory Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default 1 \"/snapshots\" services.ethereum.nethermind.<name>.backup.btrfs.snapshotRetention Number of days to retain snapshots Type : signed integer Default 1 7 Example 1 \"10\" services.ethereum.nethermind.<name>.backup.enable Whether to enable Enable backup. Type : boolean Default 1 false Example 1 true services.ethereum.nethermind.<name>.backup.metadata.interval Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 1 10 services.ethereum.nethermind.<name>.backup.restic.environmentFile file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null services.ethereum.nethermind.<name>.backup.restic.exclude Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"] services.ethereum.nethermind.<name>.backup.restic.extraOptions Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"] services.ethereum.nethermind.<name>.backup.restic.passwordFile Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\" services.ethereum.nethermind.<name>.backup.restic.rcloneConfig Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"} services.ethereum.nethermind.<name>.backup.restic.rcloneConfigFile Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null services.ethereum.nethermind.<name>.backup.restic.rcloneOptions Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"} services.ethereum.nethermind.<name>.backup.restic.repository repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\" services.ethereum.nethermind.<name>.backup.restic.repositoryFile Path to the file containing the repository location to backup to. Type : null or path Default 1 null services.ethereum.nethermind.<name>.backup.schedule Schedule for creating a backup. Format is the same as systemd.time Type : string Default 1 \"hourly\" Example 1 \"daily\" services.ethereum.nethermind.<name>.enable Whether to enable Nethermind Ethereum Node.. Type : boolean Default 1 false Example 1 true services.ethereum.nethermind.<name>.extraArgs Additional arguments to pass to Nethermind. Type : list of string Default 1 [] services.ethereum.nethermind.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default 1 false services.ethereum.nethermind.<name>.package Package to use as Nethermind. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.nethermind\"} services.ethereum.nethermind.<name>.restore.enable Whether to enable Enable restore from snapshot. Type : boolean Default 1 false Example 1 true services.ethereum.nethermind.<name>.restore.restic.environmentFile file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null services.ethereum.nethermind.<name>.restore.restic.exclude Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"] services.ethereum.nethermind.<name>.restore.restic.extraOptions Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"] services.ethereum.nethermind.<name>.restore.restic.passwordFile Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\" services.ethereum.nethermind.<name>.restore.restic.rcloneConfig Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"} services.ethereum.nethermind.<name>.restore.restic.rcloneConfigFile Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null services.ethereum.nethermind.<name>.restore.restic.rcloneOptions Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"} services.ethereum.nethermind.<name>.restore.restic.repository repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\" services.ethereum.nethermind.<name>.restore.restic.repositoryFile Path to the file containing the repository location to backup to. Type : null or path Default 1 null services.ethereum.nethermind.<name>.restore.snapshot The id of the snapshot to restore from Type : string services.ethereum.nethermind.<name>.restore.timeout The max time to wait before timing out on startup. This value is used for TimeoutStartSec in the systemd service config. Type : signed integer Default 1 600 Example 1 \"900\"","title":"Nethermind"},{"location":"reference/module-options/nethermind/#_moduleargs","text":"Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value","title":"_module.args"},{"location":"reference/module-options/nethermind/#servicesethereumnethermind","text":"Specification of one or more Nethermind instances. Type : attribute set of (submodule) Default 1 {}","title":"services.ethereum.nethermind"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsbasedbpath","text":"Configures the path of the Nethermind's database folder. Type : null or path Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.args.baseDbPath"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsconfig","text":"Determines the configuration file of the network on which Nethermind will be running. Type : null or string Default 1 null Example 1 \"mainnet\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.config"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsconfigsdirectory","text":"Changes the source directory of your configuration files. Type : null or path Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.args.configsDirectory"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargslog","text":"Changes the logging level. Type : one of \"OFF\", \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" Default 1 \"INFO\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.log"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsloggerconfigsource","text":"Changes the path of the NLog.config file. Type : null or string Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.args.loggerConfigSource"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmoduleshealthchecksenabled","text":"If 'true' then Health Check endpoints is enabled at /health. Type : boolean Default 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.HealthChecks.Enabled"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcenabled","text":"Defines whether the JSON RPC service is enabled on node startup. Type : boolean Default 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Enabled"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcenginehost","text":"Host for JSON RPC calls. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EngineHost"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcengineport","text":"Port for Execution Engine calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8551","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EnginePort"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcjwtsecretfile","text":"Path to file with hex encoded secret for jwt authentication. Type : null or string Default 1 null Example 1 \"/var/run/geth/jwtsecret\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.JwtSecretFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcport","text":"Port number for JSON RPC calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Port"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcwebsocketsport","text":"Port number for JSON RPC web sockets calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8545","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.WebSocketsPort"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesmetricsenabled","text":"If 'true',the node publishes various metrics to Prometheus Pushgateway at given interval. Type : boolean Default 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.Enabled"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesmetricsexposeport","text":"If 'true' then Health Check endpoints is enabled at /health Type : null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.ExposePort"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesnetworkdiscoveryport","text":"UDP port number for incoming discovery connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.DiscoveryPort"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameargsmodulesnetworkp2pport","text":"TPC/IP port number for incoming P2P connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 30303","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.P2PPort"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupbtrfsenable","text":"Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.enable"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupbtrfssnapshotdirectory","text":"Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default 1 \"/snapshots\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotDirectory"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupbtrfssnapshotretention","text":"Number of days to retain snapshots Type : signed integer Default 1 7 Example 1 \"10\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotRetention"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupenable","text":"Whether to enable Enable backup. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.backup.enable"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupmetadatainterval","text":"Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 1 10","title":"services.ethereum.nethermind.&lt;name&gt;.backup.metadata.interval"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticenvironmentfile","text":"file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.environmentFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticexclude","text":"Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"]","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.exclude"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticextraoptions","text":"Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"]","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.extraOptions"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticpasswordfile","text":"Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.passwordFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticrcloneconfig","text":"Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"}","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneConfig"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticrcloneconfigfile","text":"Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneConfigFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticrcloneoptions","text":"Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"}","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneOptions"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticrepository","text":"repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.repository"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupresticrepositoryfile","text":"Path to the file containing the repository location to backup to. Type : null or path Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.backup.restic.repositoryFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamebackupschedule","text":"Schedule for creating a backup. Format is the same as systemd.time Type : string Default 1 \"hourly\" Example 1 \"daily\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.schedule"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameenable","text":"Whether to enable Nethermind Ethereum Node.. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.enable"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameextraargs","text":"Additional arguments to pass to Nethermind. Type : list of string Default 1 []","title":"services.ethereum.nethermind.&lt;name&gt;.extraArgs"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default 1 false","title":"services.ethereum.nethermind.&lt;name&gt;.openFirewall"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamepackage","text":"Package to use as Nethermind. Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.nethermind\"}","title":"services.ethereum.nethermind.&lt;name&gt;.package"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreenable","text":"Whether to enable Enable restore from snapshot. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.nethermind.&lt;name&gt;.restore.enable"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticenvironmentfile","text":"file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.environmentFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticexclude","text":"Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"]","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.exclude"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticextraoptions","text":"Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"]","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.extraOptions"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticpasswordfile","text":"Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\"","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.passwordFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticrcloneconfig","text":"Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"}","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneConfig"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticrcloneconfigfile","text":"Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneConfigFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticrcloneoptions","text":"Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"}","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneOptions"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticrepository","text":"repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\"","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.repository"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoreresticrepositoryfile","text":"Path to the file containing the repository location to backup to. Type : null or path Default 1 null","title":"services.ethereum.nethermind.&lt;name&gt;.restore.restic.repositoryFile"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoresnapshot","text":"The id of the snapshot to restore from Type : string","title":"services.ethereum.nethermind.&lt;name&gt;.restore.snapshot"},{"location":"reference/module-options/nethermind/#servicesethereumnethermindnamerestoretimeout","text":"The max time to wait before timing out on startup. This value is used for TimeoutStartSec in the systemd service config. Type : signed integer Default 1 600 Example 1 \"900\"","title":"services.ethereum.nethermind.&lt;name&gt;.restore.timeout"},{"location":"reference/module-options/prysm-beacon/","text":"_module.args Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value services.ethereum.prysm-beacon Specification of one or more prysm beacon chain instances. Type : attribute set of (submodule) Default 1 {} services.ethereum.prysm-beacon.<name>.args.checkpoint-sync-url URL of a synced beacon node to trust in obtaining checkpoint sync data. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default 1 null Example 1 \"https://goerli.checkpoint-sync.ethpandaops.io\" services.ethereum.prysm-beacon.<name>.args.disable-grpc-gateway Disable the gRPC gateway for JSON-HTTP requests Type : boolean Default 1 false services.ethereum.prysm-beacon.<name>.args.disable-monitoring Disable monitoring service. Type : boolean Default 1 false services.ethereum.prysm-beacon.<name>.args.genesis-beacon-api-url URL of a synced beacon node to trust for obtaining genesis state. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default 1 null Example 1 \"https://goerli.checkpoint-sync.ethpandaops.io\" services.ethereum.prysm-beacon.<name>.args.grpc-gateway-host The host on which the gateway server runs on. Type : string Default 1 \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.grpc-gateway-port The port on which the gateway server runs. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 3500 services.ethereum.prysm-beacon.<name>.args.jwt-secret Path to a file containing a hex-encoded string representing a 32 byte secret used for authentication with an execution node via HTTP Type : string Default 1 null Example 1 \"/var/run/prysm/jwtsecret\" services.ethereum.prysm-beacon.<name>.args.monitoring-host Host used to listen and respond with metrics for prometheus. Type : string Default 1 \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.monitoring-port Port used to listen and respond with metrics for prometheus. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8080 services.ethereum.prysm-beacon.<name>.args.network The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"prater\", \"ropsten\", \"sepolia\" Default 1 null services.ethereum.prysm-beacon.<name>.args.p2p-tcp-port The port used by libp2p. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 13000 services.ethereum.prysm-beacon.<name>.args.p2p-udp-port The port used by discv5. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 12000 services.ethereum.prysm-beacon.<name>.args.pprof Enable the pprof HTTP server. Type : boolean Default 1 false services.ethereum.prysm-beacon.<name>.args.pprofaddr pprof HTTP server listening interface. Type : string Default 1 \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.pprofport pprof HTTP server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 6060 services.ethereum.prysm-beacon.<name>.args.rpc-host Host on which the RPC server should listen. Type : string Default 1 \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.rpc-port RPC port exposed by a beacon node. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 4000 services.ethereum.prysm-beacon.<name>.backup.btrfs.enable Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default 1 false Example 1 true services.ethereum.prysm-beacon.<name>.backup.btrfs.snapshotDirectory Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default 1 \"/snapshots\" services.ethereum.prysm-beacon.<name>.backup.btrfs.snapshotRetention Number of days to retain snapshots Type : signed integer Default 1 7 Example 1 \"10\" services.ethereum.prysm-beacon.<name>.backup.enable Whether to enable Enable backup. Type : boolean Default 1 false Example 1 true services.ethereum.prysm-beacon.<name>.backup.metadata.interval Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 1 10 services.ethereum.prysm-beacon.<name>.backup.restic.environmentFile file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null services.ethereum.prysm-beacon.<name>.backup.restic.exclude Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"] services.ethereum.prysm-beacon.<name>.backup.restic.extraOptions Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"] services.ethereum.prysm-beacon.<name>.backup.restic.passwordFile Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\" services.ethereum.prysm-beacon.<name>.backup.restic.rcloneConfig Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"} services.ethereum.prysm-beacon.<name>.backup.restic.rcloneConfigFile Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null services.ethereum.prysm-beacon.<name>.backup.restic.rcloneOptions Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"} services.ethereum.prysm-beacon.<name>.backup.restic.repository repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\" services.ethereum.prysm-beacon.<name>.backup.restic.repositoryFile Path to the file containing the repository location to backup to. Type : null or path Default 1 null services.ethereum.prysm-beacon.<name>.backup.schedule Schedule for creating a backup. Format is the same as systemd.time Type : string Default 1 \"hourly\" Example 1 \"daily\" services.ethereum.prysm-beacon.<name>.enable Whether to enable Ethereum Beacon Chain Node from Prysmatic Labs. Type : boolean Default 1 false Example 1 true services.ethereum.prysm-beacon.<name>.extraArgs Additional arguments to pass to Prysm Beacon Chain. Type : list of string Default 1 [] services.ethereum.prysm-beacon.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default 1 false services.ethereum.prysm-beacon.<name>.package Package to use for Prysm binary Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.prysm\"} services.ethereum.prysm-beacon.<name>.restore.enable Whether to enable Enable restore from snapshot. Type : boolean Default 1 false Example 1 true services.ethereum.prysm-beacon.<name>.restore.restic.environmentFile file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null services.ethereum.prysm-beacon.<name>.restore.restic.exclude Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"] services.ethereum.prysm-beacon.<name>.restore.restic.extraOptions Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"] services.ethereum.prysm-beacon.<name>.restore.restic.passwordFile Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\" services.ethereum.prysm-beacon.<name>.restore.restic.rcloneConfig Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"} services.ethereum.prysm-beacon.<name>.restore.restic.rcloneConfigFile Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null services.ethereum.prysm-beacon.<name>.restore.restic.rcloneOptions Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"} services.ethereum.prysm-beacon.<name>.restore.restic.repository repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\" services.ethereum.prysm-beacon.<name>.restore.restic.repositoryFile Path to the file containing the repository location to backup to. Type : null or path Default 1 null services.ethereum.prysm-beacon.<name>.restore.snapshot The id of the snapshot to restore from Type : string services.ethereum.prysm-beacon.<name>.restore.timeout The max time to wait before timing out on startup. This value is used for TimeoutStartSec in the systemd service config. Type : signed integer Default 1 600 Example 1 \"900\"","title":"Prysm beacon"},{"location":"reference/module-options/prysm-beacon/#_moduleargs","text":"Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value","title":"_module.args"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beacon","text":"Specification of one or more prysm beacon chain instances. Type : attribute set of (submodule) Default 1 {}","title":"services.ethereum.prysm-beacon"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargscheckpoint-sync-url","text":"URL of a synced beacon node to trust in obtaining checkpoint sync data. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default 1 null Example 1 \"https://goerli.checkpoint-sync.ethpandaops.io\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.checkpoint-sync-url"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsdisable-grpc-gateway","text":"Disable the gRPC gateway for JSON-HTTP requests Type : boolean Default 1 false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-grpc-gateway"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsdisable-monitoring","text":"Disable monitoring service. Type : boolean Default 1 false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-monitoring"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsgenesis-beacon-api-url","text":"URL of a synced beacon node to trust for obtaining genesis state. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default 1 null Example 1 \"https://goerli.checkpoint-sync.ethpandaops.io\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.genesis-beacon-api-url"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsgrpc-gateway-host","text":"The host on which the gateway server runs on. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-host"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsgrpc-gateway-port","text":"The port on which the gateway server runs. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 3500","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-port"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsjwt-secret","text":"Path to a file containing a hex-encoded string representing a 32 byte secret used for authentication with an execution node via HTTP Type : string Default 1 null Example 1 \"/var/run/prysm/jwtsecret\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.jwt-secret"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsmonitoring-host","text":"Host used to listen and respond with metrics for prometheus. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-host"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsmonitoring-port","text":"Port used to listen and respond with metrics for prometheus. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 8080","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-port"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsnetwork","text":"The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"prater\", \"ropsten\", \"sepolia\" Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.network"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsp2p-tcp-port","text":"The port used by libp2p. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 13000","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-tcp-port"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsp2p-udp-port","text":"The port used by discv5. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 12000","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-udp-port"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargspprof","text":"Enable the pprof HTTP server. Type : boolean Default 1 false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.pprof"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargspprofaddr","text":"pprof HTTP server listening interface. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofaddr"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargspprofport","text":"pprof HTTP server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 6060","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofport"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsrpc-host","text":"Host on which the RPC server should listen. Type : string Default 1 \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-host"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameargsrpc-port","text":"RPC port exposed by a beacon node. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 1 4000","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-port"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupbtrfsenable","text":"Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.enable"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupbtrfssnapshotdirectory","text":"Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default 1 \"/snapshots\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupbtrfssnapshotretention","text":"Number of days to retain snapshots Type : signed integer Default 1 7 Example 1 \"10\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupenable","text":"Whether to enable Enable backup. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.enable"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupmetadatainterval","text":"Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 1 10","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.metadata.interval"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticenvironmentfile","text":"file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.environmentFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticexclude","text":"Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"]","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.exclude"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticextraoptions","text":"Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"]","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.extraOptions"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticpasswordfile","text":"Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.passwordFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrcloneconfig","text":"Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"}","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneConfig"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrcloneconfigfile","text":"Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrcloneoptions","text":"Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"}","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneOptions"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrepository","text":"repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.repository"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrepositoryfile","text":"Path to the file containing the repository location to backup to. Type : null or path Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.repositoryFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamebackupschedule","text":"Schedule for creating a backup. Format is the same as systemd.time Type : string Default 1 \"hourly\" Example 1 \"daily\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.schedule"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameenable","text":"Whether to enable Ethereum Beacon Chain Node from Prysmatic Labs. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.enable"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameextraargs","text":"Additional arguments to pass to Prysm Beacon Chain. Type : list of string Default 1 []","title":"services.ethereum.prysm-beacon.&lt;name&gt;.extraArgs"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default 1 false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.openFirewall"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamepackage","text":"Package to use for Prysm binary Type : package Default 1 {\"_type\":\"literalExpression\",\"text\":\"pkgs.prysm\"}","title":"services.ethereum.prysm-beacon.&lt;name&gt;.package"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreenable","text":"Whether to enable Enable restore from snapshot. Type : boolean Default 1 false Example 1 true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.enable"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticenvironmentfile","text":"file containing the credentials to access the repository, in the format of an EnvironmentFile as described by systemd.exec(5) Type : null or string Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.environmentFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticexclude","text":"Patterns to exclude when backing up. See https://restic.readthedocs.io/en/latest/040_backup.html#excluding-files for details on syntax. Type : list of string Default 1 [\"**/LOCK\",\"keystore\",\"**/nodekey\"] Example 1 [\"/var/cache\",\"/home/*/.cache\",\".git\"]","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.exclude"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticextraoptions","text":"Extra extended options to be passed to the restic --option flag. Type : list of string Default 1 [] Example 1 [\"sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'\"]","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.extraOptions"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticpasswordfile","text":"Read the repository password from a file. Type : string Example 1 \"/etc/nixos/restic-password\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.passwordFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrcloneconfig","text":"Configuration for the rclone remote being used for backup. See the remote's specific options under rclone's docs at . When specifying option names, use the \"config\" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote, use hard_delete = true in the attribute set. Warning: Secrets set in here will be world-readable in the Nix store! Consider using the rcloneConfigFile option instead to specify secret values separately. Note that options set here will override those set in the config file. Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"account\":\"xxx\",\"hard_delete\":true,\"key\":\"xxx\",\"type\":\"b2\"}","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneConfig"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrcloneconfigfile","text":"Path to the file containing rclone configuration. This file must contain configuration for the remote specified in this backup set and also must be readable by root. Options set in rcloneConfig will override those set in this file. Type : null or path Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrcloneoptions","text":"Options to pass to rclone to control its behavior. See for available options. When specifying option names, strip the leading -- . To set a flag such as --drive-use-trash , which does not take a value, set the value to the Boolean true . Type : null or (attribute set of (string or boolean)) Default 1 null Example 1 {\"bwlimit\":\"10M\",\"drive-use-trash\":\"true\"}","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneOptions"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrepository","text":"repository to backup to. Type : null or string Default 1 null Example 1 \"sftp:backup@192.168.1.100:/backups/my-bucket\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.repository"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrepositoryfile","text":"Path to the file containing the repository location to backup to. Type : null or path Default 1 null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.repositoryFile"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoresnapshot","text":"The id of the snapshot to restore from Type : string","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.snapshot"},{"location":"reference/module-options/prysm-beacon/#servicesethereumprysm-beaconnamerestoretimeout","text":"The max time to wait before timing out on startup. This value is used for TimeoutStartSec in the systemd service config. Type : signed integer Default 1 600 Example 1 \"900\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.timeout"}]}