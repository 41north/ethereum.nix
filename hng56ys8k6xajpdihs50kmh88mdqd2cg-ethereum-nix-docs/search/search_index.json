{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About the Project Ethereum.nix is a collection of Nix packages and NixOS modules designed to make it easier to operate Ethereum related services and infrastructure. Background In the beginning Ethereum.nix was a playground for Aldo Borrero to experiment with nix'ifying Ethereum related processes. Since then, it has a grown into an ever-increasing number of packages and modules targeted towards streamlining day-to-day operations across a variety of different projects.","title":"About the Project"},{"location":"#about-the-project","text":"Ethereum.nix is a collection of Nix packages and NixOS modules designed to make it easier to operate Ethereum related services and infrastructure.","title":"About the Project"},{"location":"#background","text":"In the beginning Ethereum.nix was a playground for Aldo Borrero to experiment with nix'ifying Ethereum related processes. Since then, it has a grown into an ever-increasing number of packages and modules targeted towards streamlining day-to-day operations across a variety of different projects.","title":"Background"},{"location":"contributing/","text":"Contribution Guidelines This file contains instructions that will help you make a contribution. Licensing The Ethereum.nix packages, modules and this user guide are licensed under the MIT license . Before you contribute Here you can take a look at the existing issues . Feel free to contribute, but make sure you have a GitHub account first :) . If you're new to open source, please read GitHub's guide on How to Contribute to Open Source . It's a quick read, and it's a great way to introduce yourself to how things work behind the scenes in open-source projects. Before sending a pull request, make sure that you've read all the guidelines. If you don't understand something, please state your question clearly in an issue . Creating an issue If you need to create an issue, make sure to clearly describe it, including: The steps to reproduce it if it's a bug The version of ethereum.nix used Making changes If you want to introduce changes to the project, please follow these steps: Fork the repository on GitHub Create a branch on your fork. Don't commit directly to main Add the necessary tests for your changes Push your changes to the branch in your repository fork Submit a pull request to the original repository Make sure you based your commits on logical and atomic units! Examples of git history Git history that we want to have: Git history that we are trying to avoid: Git history that we want to have * e3ed88b (HEAD -> contribution-guide, upstream/main, origin/main, origin/HEAD, main) Merge pull request #470 from zimbatm/fix_lru_cache |\\ | * 1ab7d9f Use rayon for multithreading command |/ * e9c5bb4 Merge pull request #468 from zimbatm/multithread |\\ | * de2d6cf Add lint property for Formatter struct | * cd2ed17 Fix impl on Formatter get_command() function |/ * 028c344 Merge pull request #465 from rayon/0.15.0-release |\\ | * 7b619d6 0.15.0 release |/ * acdf7df Merge pull request #463 from zimbatm/support-multi-part-namespaces Git history that we are trying to avoid: * 4c8aca8 Merge pull request #120 from zimbatm/add-rayon |\\ | * fc2b449 use rayon for engine now | * 2304683 add rayon config | * 5285bd3 bump base image to F30 * | 4d0fbe2 Merge pull request #114 from rizary/create_method_create_release |\\ \\ | * | 36a9396 test changed | * | 22f681d method create release for github created * | | 2ef4ea1 Merge pull request #119 from rizary/config.rs |\\ \\ \\ | |/ / |/| | | * | 5f1b8f0 unused functions removed * | | a93c361 Merge pull request #117 from zimbatm/add-getreleases-to-abstract |\\ \\ \\ | |/ / |/| | | * | 0a97236 add get_releses for Cargo | * | 55e4c57 add get_releases/get_release into engine.rs |/ / * | badeddd Merge pull request #101 from zimbatm/extreme-cachin Additionally, it's always good to work on improving documentation and adding examples. Thank you for considering contributing to ethereum.nix .","title":"Contribution Guidelines"},{"location":"contributing/#contribution-guidelines","text":"This file contains instructions that will help you make a contribution.","title":"Contribution Guidelines"},{"location":"contributing/#licensing","text":"The Ethereum.nix packages, modules and this user guide are licensed under the MIT license .","title":"Licensing"},{"location":"contributing/#before-you-contribute","text":"Here you can take a look at the existing issues . Feel free to contribute, but make sure you have a GitHub account first :) . If you're new to open source, please read GitHub's guide on How to Contribute to Open Source . It's a quick read, and it's a great way to introduce yourself to how things work behind the scenes in open-source projects. Before sending a pull request, make sure that you've read all the guidelines. If you don't understand something, please state your question clearly in an issue .","title":"Before you contribute"},{"location":"contributing/#creating-an-issue","text":"If you need to create an issue, make sure to clearly describe it, including: The steps to reproduce it if it's a bug The version of ethereum.nix used","title":"Creating an issue"},{"location":"contributing/#making-changes","text":"If you want to introduce changes to the project, please follow these steps: Fork the repository on GitHub Create a branch on your fork. Don't commit directly to main Add the necessary tests for your changes Push your changes to the branch in your repository fork Submit a pull request to the original repository Make sure you based your commits on logical and atomic units!","title":"Making changes"},{"location":"contributing/#examples-of-git-history","text":"Git history that we want to have: Git history that we are trying to avoid: Git history that we want to have * e3ed88b (HEAD -> contribution-guide, upstream/main, origin/main, origin/HEAD, main) Merge pull request #470 from zimbatm/fix_lru_cache |\\ | * 1ab7d9f Use rayon for multithreading command |/ * e9c5bb4 Merge pull request #468 from zimbatm/multithread |\\ | * de2d6cf Add lint property for Formatter struct | * cd2ed17 Fix impl on Formatter get_command() function |/ * 028c344 Merge pull request #465 from rayon/0.15.0-release |\\ | * 7b619d6 0.15.0 release |/ * acdf7df Merge pull request #463 from zimbatm/support-multi-part-namespaces Git history that we are trying to avoid: * 4c8aca8 Merge pull request #120 from zimbatm/add-rayon |\\ | * fc2b449 use rayon for engine now | * 2304683 add rayon config | * 5285bd3 bump base image to F30 * | 4d0fbe2 Merge pull request #114 from rizary/create_method_create_release |\\ \\ | * | 36a9396 test changed | * | 22f681d method create release for github created * | | 2ef4ea1 Merge pull request #119 from rizary/config.rs |\\ \\ \\ | |/ / |/| | | * | 5f1b8f0 unused functions removed * | | a93c361 Merge pull request #117 from zimbatm/add-getreleases-to-abstract |\\ \\ \\ | |/ / |/| | | * | 0a97236 add get_releses for Cargo | * | 55e4c57 add get_releases/get_release into engine.rs |/ / * | badeddd Merge pull request #101 from zimbatm/extreme-cachin Additionally, it's always good to work on improving documentation and adding examples. Thank you for considering contributing to ethereum.nix .","title":"Examples of git history"},{"location":"license/","text":"Copyright (c) 2022 41North and Ethereum.nix contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"modules/reference/","text":"NixOS Options _module.args Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value services.ethereum.erigon Specification of one or more erigon instances. Type : attribute set of (submodule) Default {} services.ethereum.erigon.<name>.args.authrpc.addr HTTP-RPC server listening interface for the Engine API. Type : string Default \"127.0.0.1\" services.ethereum.erigon.<name>.args.authrpc.jwtsecret Path to the token that ensures safe connection between CL and EL. Type : null or string Default null Example \"/var/run/erigon/jwtsecret\" services.ethereum.erigon.<name>.args.authrpc.port HTTP-RPC server listening port for the Engine API Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8551 services.ethereum.erigon.<name>.args.authrpc.timeouts.idle Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default \"2m0s\" Example \"30s\" services.ethereum.erigon.<name>.args.authrpc.timeouts.read Maximum duration for reading the entire request, including the body. Type : string Default \"30s\" Example \"30s\" services.ethereum.erigon.<name>.args.authrpc.timeouts.write Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default \"30m0s\" Example \"30m0s\" services.ethereum.erigon.<name>.args.authrpc.vhosts Comma separated list of virtual hostnames from which to accept Engine API requests (server enforced). Accepts '*' wildcard.\" Type : list of string Default [\"localhost\"] Example [\"localhost\",\"erigon.example.org\"] services.ethereum.erigon.<name>.args.chain Name of the network to join. If null the network is mainnet. Type : one of \"mainnet\", \"rinkeby\", \"goerli\", \"sokol\", \"fermion\", \"mumbai\", \"bor-mainnet\", \"bor-devnet\", \"sepolia\", \"gnosis\", \"chiado\" Default \"mainnet\" services.ethereum.erigon.<name>.args.externalcl Whether to enable enables external consensus. Type : boolean Default false Example true services.ethereum.erigon.<name>.args.http.addr HTTP-RPC server listening interface. Type : string Default \"127.0.0.1\" services.ethereum.erigon.<name>.args.http.api API's offered over the HTTP-RPC interface. Type : null or (list of string) Example [\"net\",\"eth\"] services.ethereum.erigon.<name>.args.http.compression Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default false Example true services.ethereum.erigon.<name>.args.http.corsdomain List of domains from which to accept cross origin requests. Type : null or (list of string) Default null Example [\"*\"] services.ethereum.erigon.<name>.args.http.enable Enable HTTP-RPC server Type : boolean Default true services.ethereum.erigon.<name>.args.http.port HTTP-RPC server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545 services.ethereum.erigon.<name>.args.http.timeouts.idle Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default \"2m0s\" Example \"30s\" services.ethereum.erigon.<name>.args.http.timeouts.read Maximum duration for reading the entire request, including the body. Type : string Default \"30s\" Example \"30s\" services.ethereum.erigon.<name>.args.http.timeouts.write Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default \"30m0s\" Example \"30m0s\" services.ethereum.erigon.<name>.args.http.trace Whether to enable Trace HTTP requests with INFO level. Type : boolean Default false Example true services.ethereum.erigon.<name>.args.http.vhosts Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default [\"localhost\"] Example [\"localhost\",\"erigon.example.org\"] services.ethereum.erigon.<name>.args.metrics.addr Enable stand-alone metrics HTTP server listening interface. Type : string Default \"127.0.0.1\" services.ethereum.erigon.<name>.args.metrics.enable Whether to enable Enable metrics collection and reporting.. Type : boolean Default false Example true services.ethereum.erigon.<name>.args.metrics.port Metrics HTTP server listening port Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 6060 services.ethereum.erigon.<name>.args.port Network listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303 services.ethereum.erigon.<name>.args.private.api.addr Private api network address, for example: 127.0.0.1:9090, empty string means not to start the listener. Do not expose to public network. Serves remote database interface. Type : string Default \"127.0.0.1:9090\" services.ethereum.erigon.<name>.args.private.api.ratelimit Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM. Type : signed integer Default 31872 services.ethereum.erigon.<name>.args.snapshots Default: use snapshots \"true\" for BSC, Mainnet and Goerli. use snapshots \"false\" in all other cases. Type : boolean Default true services.ethereum.erigon.<name>.args.torrent.port Port to listen and serve BitTorrent protocol . Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 42069 services.ethereum.erigon.<name>.args.ws.compression Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default false Example true services.ethereum.erigon.<name>.args.ws.enable Whether to enable Erigon WebSocket API. Type : boolean Default false Example true services.ethereum.erigon.<name>.enable Whether to enable Erigon Ethereum Node.. Type : boolean Default false Example true services.ethereum.erigon.<name>.extraArgs Additional arguments to pass to Erigon. Type : list of string Default [] services.ethereum.erigon.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default false services.ethereum.erigon.<name>.package Package to use as Erigon node. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.erigon\"} services.ethereum.erigon.<name>.service.supplementaryGroups Additional groups for the systemd service e.g. sops-nix group for secret access Type : list of string Default [] services.ethereum.erigon.<name>.subVolume Whether to enable Use a subvolume for the state directory if the underlying filesystem supports it e.g. btrfs. Type : boolean Default false Example true services.ethereum.geth Specification of one or more geth instances. Type : attribute set of (submodule) Default {} services.ethereum.geth-bootnode Specification of one or more geth bootnode instances. Type : attribute set of (submodule) Default {} services.ethereum.geth-bootnode.<name>.args.addr Listen address Type : string Default \":30301\" services.ethereum.geth-bootnode.<name>.args.genkey Generate a node key Type : null or string Default null services.ethereum.geth-bootnode.<name>.args.nat Port mapping mechanism (any|none|upnp|pmp|pmp:IP|extip:IP) Type : string Default \"none\" services.ethereum.geth-bootnode.<name>.args.netrestrict Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default null services.ethereum.geth-bootnode.<name>.args.nodekey Private key filename Type : null or path Default null services.ethereum.geth-bootnode.<name>.args.nodekeyhex Private key as hex (for testing) Type : null or string Default null services.ethereum.geth-bootnode.<name>.args.v5 Run a V5 topic discovery bootnode Type : null or boolean Default null services.ethereum.geth-bootnode.<name>.args.verbosity log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 3 services.ethereum.geth-bootnode.<name>.args.vmodule Log verbosity pattern Type : null or string Default null services.ethereum.geth-bootnode.<name>.args.writeaddress Write out the node's public key and quit Type : null or boolean Default null services.ethereum.geth-bootnode.<name>.enable Whether to enable Go Ethereum Boot Node. Type : boolean Default false Example true services.ethereum.geth-bootnode.<name>.extraArgs Additional arguments to pass to the Go Ethereum Bootnode. Type : list of string Default [] services.ethereum.geth-bootnode.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default false services.ethereum.geth-bootnode.<name>.package Package to use as Go Ethereum Boot node. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"} services.ethereum.geth.<name>.args.authrpc.addr Listen address of Go Ethereum Auth RPC API. Type : string Default \"127.0.0.1\" services.ethereum.geth.<name>.args.authrpc.jwtsecret Path to a JWT secret for authenticated RPC endpoint. Type : null or string Default null Example \"/var/run/geth/jwtsecret\" services.ethereum.geth.<name>.args.authrpc.port Port number of Go Ethereum Auth RPC API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8551 services.ethereum.geth.<name>.args.authrpc.vhosts List of virtual hostnames from which to accept requests. Type : list of string Default [\"localhost\"] Example [\"localhost\",\"geth.example.org\"] services.ethereum.geth.<name>.args.bootnodes List of bootnodes to connect to Type : null or (list of string) Default null services.ethereum.geth.<name>.args.gcmode Blockchain garbage collection mode. Type : one of \"full\", \"archive\" Default \"full\" services.ethereum.geth.<name>.args.http.addr HTTP-RPC server listening interface Type : string Default \"127.0.0.1\" services.ethereum.geth.<name>.args.http.api API's offered over the HTTP-RPC interface Type : null or (list of string) Default null Example [\"net\",\"eth\"] services.ethereum.geth.<name>.args.http.corsdomain List of domains from which to accept cross origin requests Type : null or (list of string) Default null Example [\"*\"] services.ethereum.geth.<name>.args.http.enable Whether to enable Go Ethereum HTTP API. Type : boolean Default false Example true services.ethereum.geth.<name>.args.http.port Port number of Go Ethereum HTTP API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545 services.ethereum.geth.<name>.args.http.rpcprefix HTTP path path prefix on which JSON-RPC is served. Use '/' to serve on all paths. Type : null or string Default null Example \"/\" services.ethereum.geth.<name>.args.http.vhosts Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default [\"localhost\"] Example [\"localhost\",\"geth.example.org\"] services.ethereum.geth.<name>.args.maxpeers Maximum peers to connect to. Type : signed integer Default 50 services.ethereum.geth.<name>.args.metrics.addr Listen address of Go Ethereum metrics service. Type : string Default \"127.0.0.1\" services.ethereum.geth.<name>.args.metrics.enable Whether to enable Go Ethereum prometheus metrics. Type : boolean Default false Example true services.ethereum.geth.<name>.args.metrics.port Port number of Go Ethereum metrics service. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 6060 services.ethereum.geth.<name>.args.netrestrict Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default null services.ethereum.geth.<name>.args.network The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"kiln\", \"rinkeby\", \"ropsten\", \"sepolia\" Default null services.ethereum.geth.<name>.args.networkid The network id used for peer to peer communication Type : signed integer Default 1 services.ethereum.geth.<name>.args.nodiscover Disable discovery Type : boolean Default false services.ethereum.geth.<name>.args.port Port number Go Ethereum will be listening on, both TCP and UDP. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303 services.ethereum.geth.<name>.args.syncmode Blockchain sync mode. Type : one of \"snap\", \"fast\", \"full\", \"light\" Default \"snap\" services.ethereum.geth.<name>.args.verbosity log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 3 services.ethereum.geth.<name>.args.ws.addr Listen address of Go Ethereum WebSocket API. Type : string Default \"127.0.0.1\" services.ethereum.geth.<name>.args.ws.api APIs to enable over WebSocket Type : null or (list of string) Default null Example [\"net\",\"eth\"] services.ethereum.geth.<name>.args.ws.enable Whether to enable Go Ethereum WebSocket API. Type : boolean Default false Example true services.ethereum.geth.<name>.args.ws.port Port number of Go Ethereum WebSocket API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8546 services.ethereum.geth.<name>.backup.borg.compression Compression method to use. Refer to borg help compression for all available options. Type : string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})? Default \"lz4\" Example \"auto,lzma\" services.ethereum.geth.<name>.backup.borg.encryption.mode Encryption mode to use. Setting a mode other than \"none\" requires you to specify a passCommand or a passphrase . Type : one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\" Example \"repokey-blake2\" services.ethereum.geth.<name>.backup.borg.encryption.passCommand A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\" services.ethereum.geth.<name>.backup.borg.encryption.passPhrase The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null services.ethereum.geth.<name>.backup.borg.exclude Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax. Type : list of string Default [\"keystore\",\"geth/nodekey\"] Example [\"/home/*/.cache\",\"/nix\"] services.ethereum.geth.<name>.backup.borg.keyPath Path to a private key used for ssh Type : null or path Default null services.ethereum.geth.<name>.backup.borg.lockWait Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600 services.ethereum.geth.<name>.backup.borg.repo Remote or local repository to back up to. Type : string Example \"user@machine:/path/to/repo\" services.ethereum.geth.<name>.backup.borg.strictHostKeyChecking Enable or disable strict host key checking Type : boolean Default true services.ethereum.geth.<name>.backup.borg.unencryptedRepoAccess Enable or disable unencrypted repo acceess check Type : boolean Default false services.ethereum.geth.<name>.backup.btrfs.enable Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default false Example true services.ethereum.geth.<name>.backup.btrfs.snapshotDirectory Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default \"/snapshots\" services.ethereum.geth.<name>.backup.btrfs.snapshotRetention Number of days to retain snapshots Type : signed integer Default 7 Example \"10\" services.ethereum.geth.<name>.backup.enable Whether to enable Enable backup. Type : boolean Default false Example true services.ethereum.geth.<name>.backup.metadata.interval Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 10 services.ethereum.geth.<name>.backup.schedule Schedule for creating a backup. Format is the same as systemd.time Type : string Default \"hourly\" Example \"daily\" services.ethereum.geth.<name>.enable Whether to enable Go Ethereum Node. Type : boolean Default false Example true services.ethereum.geth.<name>.extraArgs Additional arguments to pass to Go Ethereum. Type : list of string Default [] services.ethereum.geth.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default false services.ethereum.geth.<name>.package Package to use as Go Ethereum node. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"} services.ethereum.geth.<name>.restore.borg.encryption.passCommand A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\" services.ethereum.geth.<name>.restore.borg.encryption.passPhrase The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null services.ethereum.geth.<name>.restore.borg.keyPath A path to a private key used for ssh Type : path services.ethereum.geth.<name>.restore.borg.lockWait Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600 services.ethereum.geth.<name>.restore.borg.repo The repository from which to pull the snapshot Type : string Example \"user@machine:/path/to/repo\" services.ethereum.geth.<name>.restore.borg.strictHostKeyChecking Enable or disable strict host key checking Type : boolean Default true services.ethereum.geth.<name>.restore.borg.unencryptedRepoAccess Enable or disable unencrypted repo acceess check Type : boolean Default false services.ethereum.geth.<name>.restore.enable Whether to enable Enable restore from snapshot. Type : boolean Default false Example true services.ethereum.geth.<name>.restore.snapshot The name of the snapshot to restore from Type : string services.ethereum.nethermind Specification of one or more Nethermind instances. Type : attribute set of (submodule) Default {} services.ethereum.nethermind.<name>.args.baseDbPath Configures the path of the Nethermind's database folder. Type : null or path Default null services.ethereum.nethermind.<name>.args.config Determines the configuration file of the network on which Nethermind will be running. Type : null or string Default null Example \"mainnet\" services.ethereum.nethermind.<name>.args.configsDirectory Changes the source directory of your configuration files. Type : null or path Default null services.ethereum.nethermind.<name>.args.log Changes the logging level. Type : one of \"OFF\", \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" Default \"INFO\" services.ethereum.nethermind.<name>.args.loggerConfigSource Changes the path of the NLog.config file. Type : null or string Default null services.ethereum.nethermind.<name>.args.modules.HealthChecks.Enabled If 'true' then Health Check endpoints is enabled at /health. Type : boolean Default true services.ethereum.nethermind.<name>.args.modules.JsonRpc.Enabled Defines whether the JSON RPC service is enabled on node startup. Type : boolean Default true services.ethereum.nethermind.<name>.args.modules.JsonRpc.EngineHost Host for JSON RPC calls. Type : string Default \"127.0.0.1\" services.ethereum.nethermind.<name>.args.modules.JsonRpc.EnginePort Port for Execution Engine calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8551 services.ethereum.nethermind.<name>.args.modules.JsonRpc.JwtSecretFile Path to file with hex encoded secret for jwt authentication. Type : null or string Default null Example \"/var/run/geth/jwtsecret\" services.ethereum.nethermind.<name>.args.modules.JsonRpc.Port Port number for JSON RPC calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545 services.ethereum.nethermind.<name>.args.modules.JsonRpc.WebSocketsPort Port number for JSON RPC web sockets calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545 services.ethereum.nethermind.<name>.args.modules.Metrics.Enabled If 'true',the node publishes various metrics to Prometheus Pushgateway at given interval. Type : boolean Default true services.ethereum.nethermind.<name>.args.modules.Metrics.ExposePort If 'true' then Health Check endpoints is enabled at /health Type : null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default null services.ethereum.nethermind.<name>.args.modules.Network.DiscoveryPort UDP port number for incoming discovery connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303 services.ethereum.nethermind.<name>.args.modules.Network.P2PPort TPC/IP port number for incoming P2P connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303 services.ethereum.nethermind.<name>.backup.borg.compression Compression method to use. Refer to borg help compression for all available options. Type : string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})? Default \"lz4\" Example \"auto,lzma\" services.ethereum.nethermind.<name>.backup.borg.encryption.mode Encryption mode to use. Setting a mode other than \"none\" requires you to specify a passCommand or a passphrase . Type : one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\" Example \"repokey-blake2\" services.ethereum.nethermind.<name>.backup.borg.encryption.passCommand A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\" services.ethereum.nethermind.<name>.backup.borg.encryption.passPhrase The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null services.ethereum.nethermind.<name>.backup.borg.exclude Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax. Type : list of string Default [\"keystore\",\"geth/nodekey\"] Example [\"/home/*/.cache\",\"/nix\"] services.ethereum.nethermind.<name>.backup.borg.keyPath Path to a private key used for ssh Type : null or path Default null services.ethereum.nethermind.<name>.backup.borg.lockWait Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600 services.ethereum.nethermind.<name>.backup.borg.repo Remote or local repository to back up to. Type : string Example \"user@machine:/path/to/repo\" services.ethereum.nethermind.<name>.backup.borg.strictHostKeyChecking Enable or disable strict host key checking Type : boolean Default true services.ethereum.nethermind.<name>.backup.borg.unencryptedRepoAccess Enable or disable unencrypted repo acceess check Type : boolean Default false services.ethereum.nethermind.<name>.backup.btrfs.enable Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default false Example true services.ethereum.nethermind.<name>.backup.btrfs.snapshotDirectory Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default \"/snapshots\" services.ethereum.nethermind.<name>.backup.btrfs.snapshotRetention Number of days to retain snapshots Type : signed integer Default 7 Example \"10\" services.ethereum.nethermind.<name>.backup.enable Whether to enable Enable backup. Type : boolean Default false Example true services.ethereum.nethermind.<name>.backup.metadata.interval Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 10 services.ethereum.nethermind.<name>.backup.schedule Schedule for creating a backup. Format is the same as systemd.time Type : string Default \"hourly\" Example \"daily\" services.ethereum.nethermind.<name>.enable Whether to enable Nethermind Ethereum Node.. Type : boolean Default false Example true services.ethereum.nethermind.<name>.extraArgs Additional arguments to pass to Nethermind. Type : list of string Default [] services.ethereum.nethermind.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default false services.ethereum.nethermind.<name>.package Package to use as Nethermind. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.nethermind\"} services.ethereum.nethermind.<name>.restore.borg.encryption.passCommand A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\" services.ethereum.nethermind.<name>.restore.borg.encryption.passPhrase The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null services.ethereum.nethermind.<name>.restore.borg.keyPath A path to a private key used for ssh Type : path services.ethereum.nethermind.<name>.restore.borg.lockWait Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600 services.ethereum.nethermind.<name>.restore.borg.repo The repository from which to pull the snapshot Type : string Example \"user@machine:/path/to/repo\" services.ethereum.nethermind.<name>.restore.borg.strictHostKeyChecking Enable or disable strict host key checking Type : boolean Default true services.ethereum.nethermind.<name>.restore.borg.unencryptedRepoAccess Enable or disable unencrypted repo acceess check Type : boolean Default false services.ethereum.nethermind.<name>.restore.enable Whether to enable Enable restore from snapshot. Type : boolean Default false Example true services.ethereum.nethermind.<name>.restore.snapshot The name of the snapshot to restore from Type : string services.ethereum.prysm-beacon Specification of one or more prysm beacon chain instances. Type : attribute set of (submodule) Default {} services.ethereum.prysm-beacon.<name>.args.checkpoint-sync-url URL of a synced beacon node to trust in obtaining checkpoint sync data. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default null Example \"https://goerli.checkpoint-sync.ethpandaops.io\" services.ethereum.prysm-beacon.<name>.args.disable-grpc-gateway Disable the gRPC gateway for JSON-HTTP requests Type : boolean Default false services.ethereum.prysm-beacon.<name>.args.disable-monitoring Disable monitoring service. Type : boolean Default false services.ethereum.prysm-beacon.<name>.args.genesis-beacon-api-url URL of a synced beacon node to trust for obtaining genesis state. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default null Example \"https://goerli.checkpoint-sync.ethpandaops.io\" services.ethereum.prysm-beacon.<name>.args.grpc-gateway-host The host on which the gateway server runs on. Type : string Default \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.grpc-gateway-port The port on which the gateway server runs. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 3500 services.ethereum.prysm-beacon.<name>.args.jwt-secret Path to a file containing a hex-encoded string representing a 32 byte secret used for authentication with an execution node via HTTP Type : string Default null Example \"/var/run/prysm/jwtsecret\" services.ethereum.prysm-beacon.<name>.args.monitoring-host Host used to listen and respond with metrics for prometheus. Type : string Default \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.monitoring-port Port used to listen and respond with metrics for prometheus. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8080 services.ethereum.prysm-beacon.<name>.args.network The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"prater\", \"ropsten\", \"sepolia\" Default null services.ethereum.prysm-beacon.<name>.args.p2p-tcp-port The port used by libp2p. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 13000 services.ethereum.prysm-beacon.<name>.args.p2p-udp-port The port used by discv5. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 12000 services.ethereum.prysm-beacon.<name>.args.pprof Enable the pprof HTTP server. Type : boolean Default false services.ethereum.prysm-beacon.<name>.args.pprofaddr pprof HTTP server listening interface. Type : string Default \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.pprofport pprof HTTP server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 6060 services.ethereum.prysm-beacon.<name>.args.rpc-host Host on which the RPC server should listen. Type : string Default \"127.0.0.1\" services.ethereum.prysm-beacon.<name>.args.rpc-port RPC port exposed by a beacon node. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 4000 services.ethereum.prysm-beacon.<name>.backup.borg.compression Compression method to use. Refer to borg help compression for all available options. Type : string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})? Default \"lz4\" Example \"auto,lzma\" services.ethereum.prysm-beacon.<name>.backup.borg.encryption.mode Encryption mode to use. Setting a mode other than \"none\" requires you to specify a passCommand or a passphrase . Type : one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\" Example \"repokey-blake2\" services.ethereum.prysm-beacon.<name>.backup.borg.encryption.passCommand A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\" services.ethereum.prysm-beacon.<name>.backup.borg.encryption.passPhrase The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null services.ethereum.prysm-beacon.<name>.backup.borg.exclude Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax. Type : list of string Default [\"keystore\",\"geth/nodekey\"] Example [\"/home/*/.cache\",\"/nix\"] services.ethereum.prysm-beacon.<name>.backup.borg.keyPath Path to a private key used for ssh Type : null or path Default null services.ethereum.prysm-beacon.<name>.backup.borg.lockWait Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600 services.ethereum.prysm-beacon.<name>.backup.borg.repo Remote or local repository to back up to. Type : string Example \"user@machine:/path/to/repo\" services.ethereum.prysm-beacon.<name>.backup.borg.strictHostKeyChecking Enable or disable strict host key checking Type : boolean Default true services.ethereum.prysm-beacon.<name>.backup.borg.unencryptedRepoAccess Enable or disable unencrypted repo acceess check Type : boolean Default false services.ethereum.prysm-beacon.<name>.backup.btrfs.enable Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default false Example true services.ethereum.prysm-beacon.<name>.backup.btrfs.snapshotDirectory Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default \"/snapshots\" services.ethereum.prysm-beacon.<name>.backup.btrfs.snapshotRetention Number of days to retain snapshots Type : signed integer Default 7 Example \"10\" services.ethereum.prysm-beacon.<name>.backup.enable Whether to enable Enable backup. Type : boolean Default false Example true services.ethereum.prysm-beacon.<name>.backup.metadata.interval Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 10 services.ethereum.prysm-beacon.<name>.backup.schedule Schedule for creating a backup. Format is the same as systemd.time Type : string Default \"hourly\" Example \"daily\" services.ethereum.prysm-beacon.<name>.enable Whether to enable Ethereum Beacon Chain Node from Prysmatic Labs. Type : boolean Default false Example true services.ethereum.prysm-beacon.<name>.extraArgs Additional arguments to pass to Prysm Beacon Chain. Type : list of string Default [] services.ethereum.prysm-beacon.<name>.openFirewall Open ports in the firewall for any enabled networking services Type : boolean Default false services.ethereum.prysm-beacon.<name>.package Package to use for Prysm binary Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.prysm\"} services.ethereum.prysm-beacon.<name>.restore.borg.encryption.passCommand A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\" services.ethereum.prysm-beacon.<name>.restore.borg.encryption.passPhrase The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null services.ethereum.prysm-beacon.<name>.restore.borg.keyPath A path to a private key used for ssh Type : path services.ethereum.prysm-beacon.<name>.restore.borg.lockWait Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600 services.ethereum.prysm-beacon.<name>.restore.borg.repo The repository from which to pull the snapshot Type : string Example \"user@machine:/path/to/repo\" services.ethereum.prysm-beacon.<name>.restore.borg.strictHostKeyChecking Enable or disable strict host key checking Type : boolean Default true services.ethereum.prysm-beacon.<name>.restore.borg.unencryptedRepoAccess Enable or disable unencrypted repo acceess check Type : boolean Default false services.ethereum.prysm-beacon.<name>.restore.enable Whether to enable Enable restore from snapshot. Type : boolean Default false Example true services.ethereum.prysm-beacon.<name>.restore.snapshot The name of the snapshot to restore from Type : string","title":"NixOS Options"},{"location":"modules/reference/#nixos-options","text":"","title":"NixOS Options"},{"location":"modules/reference/#_moduleargs","text":"Additional arguments passed to each module in addition to ones like lib , config , and pkgs , modulesPath . This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument name which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute. Some arguments are already passed by default, of which the following cannot be changed with this option: lib : The nixpkgs library. config : The results of all options after merging the values from all modules together. options : The options declared in all modules. specialArgs : The specialArgs argument passed to evalModules . All attributes of specialArgs Whereas option values can generally depend on other option values thanks to laziness, this does not apply to imports , which must be computed statically before anything else. For this reason, callers of the module system can provide specialArgs which are available during import resolution. For NixOS, specialArgs includes modulesPath , which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the nixpkgs or NixOS directories. { modulesPath, ... }: { imports = [ (modulesPath + \"/profiles/minimal.nix\") ]; } For NixOS, the default value for this option includes at least this argument: pkgs : The nixpkgs package set according to the nixpkgs.pkgs option. Type : lazy attribute set of raw value","title":"_module.args"},{"location":"modules/reference/#servicesethereumerigon","text":"Specification of one or more erigon instances. Type : attribute set of (submodule) Default {}","title":"services.ethereum.erigon"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpcaddr","text":"HTTP-RPC server listening interface for the Engine API. Type : string Default \"127.0.0.1\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.addr"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpcjwtsecret","text":"Path to the token that ensures safe connection between CL and EL. Type : null or string Default null Example \"/var/run/erigon/jwtsecret\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.jwtsecret"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpcport","text":"HTTP-RPC server listening port for the Engine API Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8551","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.port"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpctimeoutsidle","text":"Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default \"2m0s\" Example \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.idle"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpctimeoutsread","text":"Maximum duration for reading the entire request, including the body. Type : string Default \"30s\" Example \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.read"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpctimeoutswrite","text":"Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default \"30m0s\" Example \"30m0s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.write"},{"location":"modules/reference/#servicesethereumerigonnameargsauthrpcvhosts","text":"Comma separated list of virtual hostnames from which to accept Engine API requests (server enforced). Accepts '*' wildcard.\" Type : list of string Default [\"localhost\"] Example [\"localhost\",\"erigon.example.org\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.authrpc.vhosts"},{"location":"modules/reference/#servicesethereumerigonnameargschain","text":"Name of the network to join. If null the network is mainnet. Type : one of \"mainnet\", \"rinkeby\", \"goerli\", \"sokol\", \"fermion\", \"mumbai\", \"bor-mainnet\", \"bor-devnet\", \"sepolia\", \"gnosis\", \"chiado\" Default \"mainnet\"","title":"services.ethereum.erigon.&lt;name&gt;.args.chain"},{"location":"modules/reference/#servicesethereumerigonnameargsexternalcl","text":"Whether to enable enables external consensus. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.args.externalcl"},{"location":"modules/reference/#servicesethereumerigonnameargshttpaddr","text":"HTTP-RPC server listening interface. Type : string Default \"127.0.0.1\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.addr"},{"location":"modules/reference/#servicesethereumerigonnameargshttpapi","text":"API's offered over the HTTP-RPC interface. Type : null or (list of string) Example [\"net\",\"eth\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.http.api"},{"location":"modules/reference/#servicesethereumerigonnameargshttpcompression","text":"Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.args.http.compression"},{"location":"modules/reference/#servicesethereumerigonnameargshttpcorsdomain","text":"List of domains from which to accept cross origin requests. Type : null or (list of string) Default null Example [\"*\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.http.corsdomain"},{"location":"modules/reference/#servicesethereumerigonnameargshttpenable","text":"Enable HTTP-RPC server Type : boolean Default true","title":"services.ethereum.erigon.&lt;name&gt;.args.http.enable"},{"location":"modules/reference/#servicesethereumerigonnameargshttpport","text":"HTTP-RPC server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545","title":"services.ethereum.erigon.&lt;name&gt;.args.http.port"},{"location":"modules/reference/#servicesethereumerigonnameargshttptimeoutsidle","text":"Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used. Type : string Default \"2m0s\" Example \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.idle"},{"location":"modules/reference/#servicesethereumerigonnameargshttptimeoutsread","text":"Maximum duration for reading the entire request, including the body. Type : string Default \"30s\" Example \"30s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.read"},{"location":"modules/reference/#servicesethereumerigonnameargshttptimeoutswrite","text":"Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read. Type : string Default \"30m0s\" Example \"30m0s\"","title":"services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.write"},{"location":"modules/reference/#servicesethereumerigonnameargshttptrace","text":"Whether to enable Trace HTTP requests with INFO level. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.args.http.trace"},{"location":"modules/reference/#servicesethereumerigonnameargshttpvhosts","text":"Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default [\"localhost\"] Example [\"localhost\",\"erigon.example.org\"]","title":"services.ethereum.erigon.&lt;name&gt;.args.http.vhosts"},{"location":"modules/reference/#servicesethereumerigonnameargsmetricsaddr","text":"Enable stand-alone metrics HTTP server listening interface. Type : string Default \"127.0.0.1\"","title":"services.ethereum.erigon.&lt;name&gt;.args.metrics.addr"},{"location":"modules/reference/#servicesethereumerigonnameargsmetricsenable","text":"Whether to enable Enable metrics collection and reporting.. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.args.metrics.enable"},{"location":"modules/reference/#servicesethereumerigonnameargsmetricsport","text":"Metrics HTTP server listening port Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 6060","title":"services.ethereum.erigon.&lt;name&gt;.args.metrics.port"},{"location":"modules/reference/#servicesethereumerigonnameargsport","text":"Network listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303","title":"services.ethereum.erigon.&lt;name&gt;.args.port"},{"location":"modules/reference/#servicesethereumerigonnameargsprivateapiaddr","text":"Private api network address, for example: 127.0.0.1:9090, empty string means not to start the listener. Do not expose to public network. Serves remote database interface. Type : string Default \"127.0.0.1:9090\"","title":"services.ethereum.erigon.&lt;name&gt;.args.private.api.addr"},{"location":"modules/reference/#servicesethereumerigonnameargsprivateapiratelimit","text":"Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM. Type : signed integer Default 31872","title":"services.ethereum.erigon.&lt;name&gt;.args.private.api.ratelimit"},{"location":"modules/reference/#servicesethereumerigonnameargssnapshots","text":"Default: use snapshots \"true\" for BSC, Mainnet and Goerli. use snapshots \"false\" in all other cases. Type : boolean Default true","title":"services.ethereum.erigon.&lt;name&gt;.args.snapshots"},{"location":"modules/reference/#servicesethereumerigonnameargstorrentport","text":"Port to listen and serve BitTorrent protocol . Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 42069","title":"services.ethereum.erigon.&lt;name&gt;.args.torrent.port"},{"location":"modules/reference/#servicesethereumerigonnameargswscompression","text":"Whether to enable Enable compression over HTTP-RPC.. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.args.ws.compression"},{"location":"modules/reference/#servicesethereumerigonnameargswsenable","text":"Whether to enable Erigon WebSocket API. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.args.ws.enable"},{"location":"modules/reference/#servicesethereumerigonnameenable","text":"Whether to enable Erigon Ethereum Node.. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.enable"},{"location":"modules/reference/#servicesethereumerigonnameextraargs","text":"Additional arguments to pass to Erigon. Type : list of string Default []","title":"services.ethereum.erigon.&lt;name&gt;.extraArgs"},{"location":"modules/reference/#servicesethereumerigonnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default false","title":"services.ethereum.erigon.&lt;name&gt;.openFirewall"},{"location":"modules/reference/#servicesethereumerigonnamepackage","text":"Package to use as Erigon node. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.erigon\"}","title":"services.ethereum.erigon.&lt;name&gt;.package"},{"location":"modules/reference/#servicesethereumerigonnameservicesupplementarygroups","text":"Additional groups for the systemd service e.g. sops-nix group for secret access Type : list of string Default []","title":"services.ethereum.erigon.&lt;name&gt;.service.supplementaryGroups"},{"location":"modules/reference/#servicesethereumerigonnamesubvolume","text":"Whether to enable Use a subvolume for the state directory if the underlying filesystem supports it e.g. btrfs. Type : boolean Default false Example true","title":"services.ethereum.erigon.&lt;name&gt;.subVolume"},{"location":"modules/reference/#servicesethereumgeth","text":"Specification of one or more geth instances. Type : attribute set of (submodule) Default {}","title":"services.ethereum.geth"},{"location":"modules/reference/#servicesethereumgeth-bootnode","text":"Specification of one or more geth bootnode instances. Type : attribute set of (submodule) Default {}","title":"services.ethereum.geth-bootnode"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsaddr","text":"Listen address Type : string Default \":30301\"","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.addr"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsgenkey","text":"Generate a node key Type : null or string Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.genkey"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsnat","text":"Port mapping mechanism (any|none|upnp|pmp|pmp:IP|extip:IP) Type : string Default \"none\"","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.nat"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsnetrestrict","text":"Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.netrestrict"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsnodekey","text":"Private key filename Type : null or path Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekey"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsnodekeyhex","text":"Private key as hex (for testing) Type : null or string Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekeyhex"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsv5","text":"Run a V5 topic discovery bootnode Type : null or boolean Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.v5"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsverbosity","text":"log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 3","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.verbosity"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargsvmodule","text":"Log verbosity pattern Type : null or string Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.vmodule"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameargswriteaddress","text":"Write out the node's public key and quit Type : null or boolean Default null","title":"services.ethereum.geth-bootnode.&lt;name&gt;.args.writeaddress"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameenable","text":"Whether to enable Go Ethereum Boot Node. Type : boolean Default false Example true","title":"services.ethereum.geth-bootnode.&lt;name&gt;.enable"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameextraargs","text":"Additional arguments to pass to the Go Ethereum Bootnode. Type : list of string Default []","title":"services.ethereum.geth-bootnode.&lt;name&gt;.extraArgs"},{"location":"modules/reference/#servicesethereumgeth-bootnodenameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default false","title":"services.ethereum.geth-bootnode.&lt;name&gt;.openFirewall"},{"location":"modules/reference/#servicesethereumgeth-bootnodenamepackage","text":"Package to use as Go Ethereum Boot node. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"}","title":"services.ethereum.geth-bootnode.&lt;name&gt;.package"},{"location":"modules/reference/#servicesethereumgethnameargsauthrpcaddr","text":"Listen address of Go Ethereum Auth RPC API. Type : string Default \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.addr"},{"location":"modules/reference/#servicesethereumgethnameargsauthrpcjwtsecret","text":"Path to a JWT secret for authenticated RPC endpoint. Type : null or string Default null Example \"/var/run/geth/jwtsecret\"","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.jwtsecret"},{"location":"modules/reference/#servicesethereumgethnameargsauthrpcport","text":"Port number of Go Ethereum Auth RPC API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8551","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.port"},{"location":"modules/reference/#servicesethereumgethnameargsauthrpcvhosts","text":"List of virtual hostnames from which to accept requests. Type : list of string Default [\"localhost\"] Example [\"localhost\",\"geth.example.org\"]","title":"services.ethereum.geth.&lt;name&gt;.args.authrpc.vhosts"},{"location":"modules/reference/#servicesethereumgethnameargsbootnodes","text":"List of bootnodes to connect to Type : null or (list of string) Default null","title":"services.ethereum.geth.&lt;name&gt;.args.bootnodes"},{"location":"modules/reference/#servicesethereumgethnameargsgcmode","text":"Blockchain garbage collection mode. Type : one of \"full\", \"archive\" Default \"full\"","title":"services.ethereum.geth.&lt;name&gt;.args.gcmode"},{"location":"modules/reference/#servicesethereumgethnameargshttpaddr","text":"HTTP-RPC server listening interface Type : string Default \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.http.addr"},{"location":"modules/reference/#servicesethereumgethnameargshttpapi","text":"API's offered over the HTTP-RPC interface Type : null or (list of string) Default null Example [\"net\",\"eth\"]","title":"services.ethereum.geth.&lt;name&gt;.args.http.api"},{"location":"modules/reference/#servicesethereumgethnameargshttpcorsdomain","text":"List of domains from which to accept cross origin requests Type : null or (list of string) Default null Example [\"*\"]","title":"services.ethereum.geth.&lt;name&gt;.args.http.corsdomain"},{"location":"modules/reference/#servicesethereumgethnameargshttpenable","text":"Whether to enable Go Ethereum HTTP API. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.args.http.enable"},{"location":"modules/reference/#servicesethereumgethnameargshttpport","text":"Port number of Go Ethereum HTTP API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545","title":"services.ethereum.geth.&lt;name&gt;.args.http.port"},{"location":"modules/reference/#servicesethereumgethnameargshttprpcprefix","text":"HTTP path path prefix on which JSON-RPC is served. Use '/' to serve on all paths. Type : null or string Default null Example \"/\"","title":"services.ethereum.geth.&lt;name&gt;.args.http.rpcprefix"},{"location":"modules/reference/#servicesethereumgethnameargshttpvhosts","text":"Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. Type : list of string Default [\"localhost\"] Example [\"localhost\",\"geth.example.org\"]","title":"services.ethereum.geth.&lt;name&gt;.args.http.vhosts"},{"location":"modules/reference/#servicesethereumgethnameargsmaxpeers","text":"Maximum peers to connect to. Type : signed integer Default 50","title":"services.ethereum.geth.&lt;name&gt;.args.maxpeers"},{"location":"modules/reference/#servicesethereumgethnameargsmetricsaddr","text":"Listen address of Go Ethereum metrics service. Type : string Default \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.metrics.addr"},{"location":"modules/reference/#servicesethereumgethnameargsmetricsenable","text":"Whether to enable Go Ethereum prometheus metrics. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.args.metrics.enable"},{"location":"modules/reference/#servicesethereumgethnameargsmetricsport","text":"Port number of Go Ethereum metrics service. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 6060","title":"services.ethereum.geth.&lt;name&gt;.args.metrics.port"},{"location":"modules/reference/#servicesethereumgethnameargsnetrestrict","text":"Restrict network communication to the given IP networks (CIDR masks) Type : null or string Default null","title":"services.ethereum.geth.&lt;name&gt;.args.netrestrict"},{"location":"modules/reference/#servicesethereumgethnameargsnetwork","text":"The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"kiln\", \"rinkeby\", \"ropsten\", \"sepolia\" Default null","title":"services.ethereum.geth.&lt;name&gt;.args.network"},{"location":"modules/reference/#servicesethereumgethnameargsnetworkid","text":"The network id used for peer to peer communication Type : signed integer Default 1","title":"services.ethereum.geth.&lt;name&gt;.args.networkid"},{"location":"modules/reference/#servicesethereumgethnameargsnodiscover","text":"Disable discovery Type : boolean Default false","title":"services.ethereum.geth.&lt;name&gt;.args.nodiscover"},{"location":"modules/reference/#servicesethereumgethnameargsport","text":"Port number Go Ethereum will be listening on, both TCP and UDP. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303","title":"services.ethereum.geth.&lt;name&gt;.args.port"},{"location":"modules/reference/#servicesethereumgethnameargssyncmode","text":"Blockchain sync mode. Type : one of \"snap\", \"fast\", \"full\", \"light\" Default \"snap\"","title":"services.ethereum.geth.&lt;name&gt;.args.syncmode"},{"location":"modules/reference/#servicesethereumgethnameargsverbosity","text":"log verbosity (0-5) Type : integer between 0 and 5 (both inclusive) Default 3","title":"services.ethereum.geth.&lt;name&gt;.args.verbosity"},{"location":"modules/reference/#servicesethereumgethnameargswsaddr","text":"Listen address of Go Ethereum WebSocket API. Type : string Default \"127.0.0.1\"","title":"services.ethereum.geth.&lt;name&gt;.args.ws.addr"},{"location":"modules/reference/#servicesethereumgethnameargswsapi","text":"APIs to enable over WebSocket Type : null or (list of string) Default null Example [\"net\",\"eth\"]","title":"services.ethereum.geth.&lt;name&gt;.args.ws.api"},{"location":"modules/reference/#servicesethereumgethnameargswsenable","text":"Whether to enable Go Ethereum WebSocket API. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.args.ws.enable"},{"location":"modules/reference/#servicesethereumgethnameargswsport","text":"Port number of Go Ethereum WebSocket API. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8546","title":"services.ethereum.geth.&lt;name&gt;.args.ws.port"},{"location":"modules/reference/#servicesethereumgethnamebackupborgcompression","text":"Compression method to use. Refer to borg help compression for all available options. Type : string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})? Default \"lz4\" Example \"auto,lzma\"","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.compression"},{"location":"modules/reference/#servicesethereumgethnamebackupborgencryptionmode","text":"Encryption mode to use. Setting a mode other than \"none\" requires you to specify a passCommand or a passphrase . Type : one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\" Example \"repokey-blake2\"","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.encryption.mode"},{"location":"modules/reference/#servicesethereumgethnamebackupborgencryptionpasscommand","text":"A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\"","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.encryption.passCommand"},{"location":"modules/reference/#servicesethereumgethnamebackupborgencryptionpassphrase","text":"The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.encryption.passPhrase"},{"location":"modules/reference/#servicesethereumgethnamebackupborgexclude","text":"Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax. Type : list of string Default [\"keystore\",\"geth/nodekey\"] Example [\"/home/*/.cache\",\"/nix\"]","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.exclude"},{"location":"modules/reference/#servicesethereumgethnamebackupborgkeypath","text":"Path to a private key used for ssh Type : null or path Default null","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.keyPath"},{"location":"modules/reference/#servicesethereumgethnamebackupborglockwait","text":"Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.lockWait"},{"location":"modules/reference/#servicesethereumgethnamebackupborgrepo","text":"Remote or local repository to back up to. Type : string Example \"user@machine:/path/to/repo\"","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.repo"},{"location":"modules/reference/#servicesethereumgethnamebackupborgstricthostkeychecking","text":"Enable or disable strict host key checking Type : boolean Default true","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.strictHostKeyChecking"},{"location":"modules/reference/#servicesethereumgethnamebackupborgunencryptedrepoaccess","text":"Enable or disable unencrypted repo acceess check Type : boolean Default false","title":"services.ethereum.geth.&lt;name&gt;.backup.borg.unencryptedRepoAccess"},{"location":"modules/reference/#servicesethereumgethnamebackupbtrfsenable","text":"Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.backup.btrfs.enable"},{"location":"modules/reference/#servicesethereumgethnamebackupbtrfssnapshotdirectory","text":"Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default \"/snapshots\"","title":"services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotDirectory"},{"location":"modules/reference/#servicesethereumgethnamebackupbtrfssnapshotretention","text":"Number of days to retain snapshots Type : signed integer Default 7 Example \"10\"","title":"services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotRetention"},{"location":"modules/reference/#servicesethereumgethnamebackupenable","text":"Whether to enable Enable backup. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.backup.enable"},{"location":"modules/reference/#servicesethereumgethnamebackupmetadatainterval","text":"Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 10","title":"services.ethereum.geth.&lt;name&gt;.backup.metadata.interval"},{"location":"modules/reference/#servicesethereumgethnamebackupschedule","text":"Schedule for creating a backup. Format is the same as systemd.time Type : string Default \"hourly\" Example \"daily\"","title":"services.ethereum.geth.&lt;name&gt;.backup.schedule"},{"location":"modules/reference/#servicesethereumgethnameenable","text":"Whether to enable Go Ethereum Node. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.enable"},{"location":"modules/reference/#servicesethereumgethnameextraargs","text":"Additional arguments to pass to Go Ethereum. Type : list of string Default []","title":"services.ethereum.geth.&lt;name&gt;.extraArgs"},{"location":"modules/reference/#servicesethereumgethnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default false","title":"services.ethereum.geth.&lt;name&gt;.openFirewall"},{"location":"modules/reference/#servicesethereumgethnamepackage","text":"Package to use as Go Ethereum node. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.geth\"}","title":"services.ethereum.geth.&lt;name&gt;.package"},{"location":"modules/reference/#servicesethereumgethnamerestoreborgencryptionpasscommand","text":"A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\"","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.encryption.passCommand"},{"location":"modules/reference/#servicesethereumgethnamerestoreborgencryptionpassphrase","text":"The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.encryption.passPhrase"},{"location":"modules/reference/#servicesethereumgethnamerestoreborgkeypath","text":"A path to a private key used for ssh Type : path","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.keyPath"},{"location":"modules/reference/#servicesethereumgethnamerestoreborglockwait","text":"Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.lockWait"},{"location":"modules/reference/#servicesethereumgethnamerestoreborgrepo","text":"The repository from which to pull the snapshot Type : string Example \"user@machine:/path/to/repo\"","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.repo"},{"location":"modules/reference/#servicesethereumgethnamerestoreborgstricthostkeychecking","text":"Enable or disable strict host key checking Type : boolean Default true","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.strictHostKeyChecking"},{"location":"modules/reference/#servicesethereumgethnamerestoreborgunencryptedrepoaccess","text":"Enable or disable unencrypted repo acceess check Type : boolean Default false","title":"services.ethereum.geth.&lt;name&gt;.restore.borg.unencryptedRepoAccess"},{"location":"modules/reference/#servicesethereumgethnamerestoreenable","text":"Whether to enable Enable restore from snapshot. Type : boolean Default false Example true","title":"services.ethereum.geth.&lt;name&gt;.restore.enable"},{"location":"modules/reference/#servicesethereumgethnamerestoresnapshot","text":"The name of the snapshot to restore from Type : string","title":"services.ethereum.geth.&lt;name&gt;.restore.snapshot"},{"location":"modules/reference/#servicesethereumnethermind","text":"Specification of one or more Nethermind instances. Type : attribute set of (submodule) Default {}","title":"services.ethereum.nethermind"},{"location":"modules/reference/#servicesethereumnethermindnameargsbasedbpath","text":"Configures the path of the Nethermind's database folder. Type : null or path Default null","title":"services.ethereum.nethermind.&lt;name&gt;.args.baseDbPath"},{"location":"modules/reference/#servicesethereumnethermindnameargsconfig","text":"Determines the configuration file of the network on which Nethermind will be running. Type : null or string Default null Example \"mainnet\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.config"},{"location":"modules/reference/#servicesethereumnethermindnameargsconfigsdirectory","text":"Changes the source directory of your configuration files. Type : null or path Default null","title":"services.ethereum.nethermind.&lt;name&gt;.args.configsDirectory"},{"location":"modules/reference/#servicesethereumnethermindnameargslog","text":"Changes the logging level. Type : one of \"OFF\", \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" Default \"INFO\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.log"},{"location":"modules/reference/#servicesethereumnethermindnameargsloggerconfigsource","text":"Changes the path of the NLog.config file. Type : null or string Default null","title":"services.ethereum.nethermind.&lt;name&gt;.args.loggerConfigSource"},{"location":"modules/reference/#servicesethereumnethermindnameargsmoduleshealthchecksenabled","text":"If 'true' then Health Check endpoints is enabled at /health. Type : boolean Default true","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.HealthChecks.Enabled"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesjsonrpcenabled","text":"Defines whether the JSON RPC service is enabled on node startup. Type : boolean Default true","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Enabled"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesjsonrpcenginehost","text":"Host for JSON RPC calls. Type : string Default \"127.0.0.1\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EngineHost"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesjsonrpcengineport","text":"Port for Execution Engine calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8551","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EnginePort"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesjsonrpcjwtsecretfile","text":"Path to file with hex encoded secret for jwt authentication. Type : null or string Default null Example \"/var/run/geth/jwtsecret\"","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.JwtSecretFile"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesjsonrpcport","text":"Port number for JSON RPC calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Port"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesjsonrpcwebsocketsport","text":"Port number for JSON RPC web sockets calls. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8545","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.WebSocketsPort"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesmetricsenabled","text":"If 'true',the node publishes various metrics to Prometheus Pushgateway at given interval. Type : boolean Default true","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.Enabled"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesmetricsexposeport","text":"If 'true' then Health Check endpoints is enabled at /health Type : null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default null","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.ExposePort"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesnetworkdiscoveryport","text":"UDP port number for incoming discovery connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.DiscoveryPort"},{"location":"modules/reference/#servicesethereumnethermindnameargsmodulesnetworkp2pport","text":"TPC/IP port number for incoming P2P connections. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 30303","title":"services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.P2PPort"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgcompression","text":"Compression method to use. Refer to borg help compression for all available options. Type : string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})? Default \"lz4\" Example \"auto,lzma\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.compression"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgencryptionmode","text":"Encryption mode to use. Setting a mode other than \"none\" requires you to specify a passCommand or a passphrase . Type : one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\" Example \"repokey-blake2\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.encryption.mode"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgencryptionpasscommand","text":"A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.encryption.passCommand"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgencryptionpassphrase","text":"The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.encryption.passPhrase"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgexclude","text":"Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax. Type : list of string Default [\"keystore\",\"geth/nodekey\"] Example [\"/home/*/.cache\",\"/nix\"]","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.exclude"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgkeypath","text":"Path to a private key used for ssh Type : null or path Default null","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.keyPath"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborglockwait","text":"Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.lockWait"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgrepo","text":"Remote or local repository to back up to. Type : string Example \"user@machine:/path/to/repo\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.repo"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgstricthostkeychecking","text":"Enable or disable strict host key checking Type : boolean Default true","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.strictHostKeyChecking"},{"location":"modules/reference/#servicesethereumnethermindnamebackupborgunencryptedrepoaccess","text":"Enable or disable unencrypted repo acceess check Type : boolean Default false","title":"services.ethereum.nethermind.&lt;name&gt;.backup.borg.unencryptedRepoAccess"},{"location":"modules/reference/#servicesethereumnethermindnamebackupbtrfsenable","text":"Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default false Example true","title":"services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.enable"},{"location":"modules/reference/#servicesethereumnethermindnamebackupbtrfssnapshotdirectory","text":"Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default \"/snapshots\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotDirectory"},{"location":"modules/reference/#servicesethereumnethermindnamebackupbtrfssnapshotretention","text":"Number of days to retain snapshots Type : signed integer Default 7 Example \"10\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotRetention"},{"location":"modules/reference/#servicesethereumnethermindnamebackupenable","text":"Whether to enable Enable backup. Type : boolean Default false Example true","title":"services.ethereum.nethermind.&lt;name&gt;.backup.enable"},{"location":"modules/reference/#servicesethereumnethermindnamebackupmetadatainterval","text":"Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 10","title":"services.ethereum.nethermind.&lt;name&gt;.backup.metadata.interval"},{"location":"modules/reference/#servicesethereumnethermindnamebackupschedule","text":"Schedule for creating a backup. Format is the same as systemd.time Type : string Default \"hourly\" Example \"daily\"","title":"services.ethereum.nethermind.&lt;name&gt;.backup.schedule"},{"location":"modules/reference/#servicesethereumnethermindnameenable","text":"Whether to enable Nethermind Ethereum Node.. Type : boolean Default false Example true","title":"services.ethereum.nethermind.&lt;name&gt;.enable"},{"location":"modules/reference/#servicesethereumnethermindnameextraargs","text":"Additional arguments to pass to Nethermind. Type : list of string Default []","title":"services.ethereum.nethermind.&lt;name&gt;.extraArgs"},{"location":"modules/reference/#servicesethereumnethermindnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default false","title":"services.ethereum.nethermind.&lt;name&gt;.openFirewall"},{"location":"modules/reference/#servicesethereumnethermindnamepackage","text":"Package to use as Nethermind. Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.nethermind\"}","title":"services.ethereum.nethermind.&lt;name&gt;.package"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborgencryptionpasscommand","text":"A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\"","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.encryption.passCommand"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborgencryptionpassphrase","text":"The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.encryption.passPhrase"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborgkeypath","text":"A path to a private key used for ssh Type : path","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.keyPath"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborglockwait","text":"Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.lockWait"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborgrepo","text":"The repository from which to pull the snapshot Type : string Example \"user@machine:/path/to/repo\"","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.repo"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborgstricthostkeychecking","text":"Enable or disable strict host key checking Type : boolean Default true","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.strictHostKeyChecking"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreborgunencryptedrepoaccess","text":"Enable or disable unencrypted repo acceess check Type : boolean Default false","title":"services.ethereum.nethermind.&lt;name&gt;.restore.borg.unencryptedRepoAccess"},{"location":"modules/reference/#servicesethereumnethermindnamerestoreenable","text":"Whether to enable Enable restore from snapshot. Type : boolean Default false Example true","title":"services.ethereum.nethermind.&lt;name&gt;.restore.enable"},{"location":"modules/reference/#servicesethereumnethermindnamerestoresnapshot","text":"The name of the snapshot to restore from Type : string","title":"services.ethereum.nethermind.&lt;name&gt;.restore.snapshot"},{"location":"modules/reference/#servicesethereumprysm-beacon","text":"Specification of one or more prysm beacon chain instances. Type : attribute set of (submodule) Default {}","title":"services.ethereum.prysm-beacon"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargscheckpoint-sync-url","text":"URL of a synced beacon node to trust in obtaining checkpoint sync data. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default null Example \"https://goerli.checkpoint-sync.ethpandaops.io\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.checkpoint-sync-url"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsdisable-grpc-gateway","text":"Disable the gRPC gateway for JSON-HTTP requests Type : boolean Default false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-grpc-gateway"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsdisable-monitoring","text":"Disable monitoring service. Type : boolean Default false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-monitoring"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsgenesis-beacon-api-url","text":"URL of a synced beacon node to trust for obtaining genesis state. As an additional safety measure, it is strongly recommended to only use this option in conjunction with --weak-subjectivity-checkpoint flag Type : null or string Default null Example \"https://goerli.checkpoint-sync.ethpandaops.io\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.genesis-beacon-api-url"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsgrpc-gateway-host","text":"The host on which the gateway server runs on. Type : string Default \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-host"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsgrpc-gateway-port","text":"The port on which the gateway server runs. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 3500","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-port"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsjwt-secret","text":"Path to a file containing a hex-encoded string representing a 32 byte secret used for authentication with an execution node via HTTP Type : string Default null Example \"/var/run/prysm/jwtsecret\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.jwt-secret"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsmonitoring-host","text":"Host used to listen and respond with metrics for prometheus. Type : string Default \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-host"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsmonitoring-port","text":"Port used to listen and respond with metrics for prometheus. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 8080","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-port"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsnetwork","text":"The network to connect to. Mainnet (null) is the default ethereum network. Type : null or one of \"goerli\", \"prater\", \"ropsten\", \"sepolia\" Default null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.network"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsp2p-tcp-port","text":"The port used by libp2p. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 13000","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-tcp-port"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsp2p-udp-port","text":"The port used by discv5. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 12000","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-udp-port"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargspprof","text":"Enable the pprof HTTP server. Type : boolean Default false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.pprof"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargspprofaddr","text":"pprof HTTP server listening interface. Type : string Default \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofaddr"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargspprofport","text":"pprof HTTP server listening port. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 6060","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofport"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsrpc-host","text":"Host on which the RPC server should listen. Type : string Default \"127.0.0.1\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-host"},{"location":"modules/reference/#servicesethereumprysm-beaconnameargsrpc-port","text":"RPC port exposed by a beacon node. Type : 16 bit unsigned integer; between 0 and 65535 (both inclusive) Default 4000","title":"services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-port"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgcompression","text":"Compression method to use. Refer to borg help compression for all available options. Type : string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})? Default \"lz4\" Example \"auto,lzma\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.compression"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgencryptionmode","text":"Encryption mode to use. Setting a mode other than \"none\" requires you to specify a passCommand or a passphrase . Type : one of \"repokey\", \"keyfile\", \"repokey-blake2\", \"keyfile-blake2\", \"authenticated\", \"authenticated-blake2\", \"none\" Example \"repokey-blake2\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.encryption.mode"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgencryptionpasscommand","text":"A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.encryption.passCommand"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgencryptionpassphrase","text":"The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.encryption.passPhrase"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgexclude","text":"Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax. Type : list of string Default [\"keystore\",\"geth/nodekey\"] Example [\"/home/*/.cache\",\"/nix\"]","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.exclude"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgkeypath","text":"Path to a private key used for ssh Type : null or path Default null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.keyPath"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborglockwait","text":"Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.lockWait"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgrepo","text":"Remote or local repository to back up to. Type : string Example \"user@machine:/path/to/repo\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.repo"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgstricthostkeychecking","text":"Enable or disable strict host key checking Type : boolean Default true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.strictHostKeyChecking"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupborgunencryptedrepoaccess","text":"Enable or disable unencrypted repo acceess check Type : boolean Default false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.borg.unencryptedRepoAccess"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupbtrfsenable","text":"Whether to enable Enable btrfs snapshots for the state directory, if supported by the underlying filesystem. Type : boolean Default false Example true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.enable"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupbtrfssnapshotdirectory","text":"Directory in which to create the btrfs snapshots. Must be located on the same volume as the state directory Type : path Default \"/snapshots\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupbtrfssnapshotretention","text":"Number of days to retain snapshots Type : signed integer Default 7 Example \"10\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupenable","text":"Whether to enable Enable backup. Type : boolean Default false Example true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.enable"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupmetadatainterval","text":"Time interval in seconds between capturing backup metadata Type : integer between 1 and 60 (both inclusive) Default 10","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.metadata.interval"},{"location":"modules/reference/#servicesethereumprysm-beaconnamebackupschedule","text":"Schedule for creating a backup. Format is the same as systemd.time Type : string Default \"hourly\" Example \"daily\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.backup.schedule"},{"location":"modules/reference/#servicesethereumprysm-beaconnameenable","text":"Whether to enable Ethereum Beacon Chain Node from Prysmatic Labs. Type : boolean Default false Example true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.enable"},{"location":"modules/reference/#servicesethereumprysm-beaconnameextraargs","text":"Additional arguments to pass to Prysm Beacon Chain. Type : list of string Default []","title":"services.ethereum.prysm-beacon.&lt;name&gt;.extraArgs"},{"location":"modules/reference/#servicesethereumprysm-beaconnameopenfirewall","text":"Open ports in the firewall for any enabled networking services Type : boolean Default false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.openFirewall"},{"location":"modules/reference/#servicesethereumprysm-beaconnamepackage","text":"Package to use for Prysm binary Type : package Default {\"_type\":\"literalExpression\",\"text\":\"pkgs.prysm\"}","title":"services.ethereum.prysm-beacon.&lt;name&gt;.package"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborgencryptionpasscommand","text":"A command which prints the passphrase to stdout. Mutually exclusive with passphrase . Type : null or string Default null Example \"cat /path/to/passphrase_file\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.encryption.passCommand"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborgencryptionpassphrase","text":"The passphrase the backups are encrypted with. Mutually exclusive with passCommand . If you do not want the passphrase to be stored in the world-readable Nix store, use passCommand . Type : null or string Default null","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.encryption.passPhrase"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborgkeypath","text":"A path to a private key used for ssh Type : path","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.keyPath"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborglockwait","text":"Amount of time in seconds to wait when acquiring a repository lock Type : signed integer Default 600","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.lockWait"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborgrepo","text":"The repository from which to pull the snapshot Type : string Example \"user@machine:/path/to/repo\"","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.repo"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborgstricthostkeychecking","text":"Enable or disable strict host key checking Type : boolean Default true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.strictHostKeyChecking"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreborgunencryptedrepoaccess","text":"Enable or disable unencrypted repo acceess check Type : boolean Default false","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.borg.unencryptedRepoAccess"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoreenable","text":"Whether to enable Enable restore from snapshot. Type : boolean Default false Example true","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.enable"},{"location":"modules/reference/#servicesethereumprysm-beaconnamerestoresnapshot","text":"The name of the snapshot to restore from Type : string","title":"services.ethereum.prysm-beacon.&lt;name&gt;.restore.snapshot"}]}